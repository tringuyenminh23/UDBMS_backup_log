INFO:Loader:Loader started
INFO:Loader:Total loading time: 0
INFO:Joiner:Started Joiner
INFO:Joiner Init:Initialize link took:  0
INFO:Joiner Filtering:Filtering time 0
INFO:Joiner Filtering:Number of node processed:  6
INFO:Joiner Filtering:Number of node filtered:  2
INFO:Joiner Filtering:Average filtering time for one node: 0
INFO:Joiner Validating:Number of remaining leaf nodes after Filtering: 1
DEBUG:Node Validator:Start validating node A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Loader:Loader started
INFO:Loader:Total loading time: 0
INFO:Joiner:Started Joiner
INFO:Joiner Init:Initialize link took:  0
INFO:Joiner Filtering:Filtering time 0
INFO:Joiner Filtering:Number of node processed:  6
INFO:Joiner Filtering:Number of node filtered:  2
INFO:Joiner Filtering:Average filtering time for one node: 0
INFO:Joiner Validating:Number of remaining leaf nodes after Filtering: 1
DEBUG:Node Validator:Start validating node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9', 10.0]
DEBUG:Entries Value Validator:	{'D': None, 'A': '2.9', 'B': None, 'C': None}{'D': 26.0, 'A': 10.0, 'B': 31.0, 'C': 24.0}
DEBUG:Entries Value Validator:End Value Validation: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validator:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validator:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validator:Checking connected element B
DEBUG:Entries Structure Validator:	 Checking connected node: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validating node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Start entries value validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['1.4', 20.0]", "['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['1.4', 20.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9.2', 31.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [31.0, 24.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.2', 31.0]
DEBUG:Entries Value Validator:	{'D': None, 'A': None, 'B': '2.9.2', 'C': None}{'D': None, 'A': None, 'B': 31.0, 'C': 24.0}
DEBUG:Entries Value Validator:End Value Validation: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validator:Start entries structure validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validator:Checking entry: ['2.9.2', 31.0]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validator:	Connected node still have entries
DEBUG:Entries Structure Validator:		connected_entry ['2.9.2', 31.0]
DEBUG:Entries Structure Validator:		connected_combination: {'D': None, 'A': None, 'B': '2.9.2', 'C': None}{'D': None, 'A': None, 'B': 31.0, 'C': 24.0}
DEBUG:Entries Structure Validator:		validating_entry_combination: {'D': None, 'A': '2.9', 'B': None, 'C': None}{'D': 26.0, 'A': 10.0, 'B': 31.0, 'C': 24.0}
DEBUG:Entries Structure Validator:			MATCH
DEBUG:Entries Structure Validator:Has combination
DEBUG:Entries Structure Validator:{'D': None, 'A': '2.9', 'B': '2.9.2', 'C': None}{'D': 26.0, 'A': 10.0, 'B': 31.0, 'C': 24.0}
DEBUG:Entries Structure Validator:Checking connected element C
DEBUG:Entries Structure Validator:	 Checking connected node: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validating node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4', 24.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.6', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4', 24.0]
DEBUG:Entries Value Validator:	{'D': None, 'A': None, 'B': None, 'C': '2.9.4'}{'D': None, 'A': None, 'B': None, 'C': 24.0}
DEBUG:Entries Value Validator:['2.6', 30.0]
DEBUG:Entries Value Validator:	{'D': None, 'A': None, 'B': None, 'C': '2.6'}{'D': None, 'A': None, 'B': None, 'C': 30.0}
DEBUG:Entries Value Validator:End Value Validation: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validator:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validator:Checking entry: ['2.9.4', 24.0]
DEBUG:Entries Structure Validator:Checking connected element D
DEBUG:Entries Structure Validator:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validating node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:Checking Entry: ['1.8.2', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:	{'D': '2.9.4.2', 'A': None, 'B': None, 'C': None}{'D': 26.0, 'A': None, 'B': None, 'C': None}
DEBUG:Entries Value Validator:['1.8.2', 30.0]
DEBUG:Entries Value Validator:	{'D': '1.8.2', 'A': None, 'B': None, 'C': None}{'D': 30.0, 'A': None, 'B': None, 'C': None}
DEBUG:Entries Value Validator:End Value Validation: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validator:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validator:Checking entry: ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validator:Checking entry: ['1.8.2', 30.0]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validator:	Connected node still have entries
DEBUG:Entries Structure Validator:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validator:		connected_combination: {'D': '2.9.4.2', 'A': None, 'B': None, 'C': None}{'D': 26.0, 'A': None, 'B': None, 'C': None}
DEBUG:Entries Structure Validator:		validating_entry_combination: {'D': None, 'A': None, 'B': None, 'C': '2.9.4'}{'D': None, 'A': None, 'B': None, 'C': 24.0}
DEBUG:Entries Structure Validator:			MATCH
DEBUG:Entries Structure Validator:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validator:		connected_combination: {'D': '1.8.2', 'A': None, 'B': None, 'C': None}{'D': 30.0, 'A': None, 'B': None, 'C': None}
DEBUG:Entries Structure Validator:		validating_entry_combination: {'D': None, 'A': None, 'B': None, 'C': '2.9.4'}{'D': None, 'A': None, 'B': None, 'C': 24.0}
DEBUG:Entries Structure Validator:Has combination
DEBUG:Entries Structure Validator:{'D': '2.9.4.2', 'A': None, 'B': None, 'C': '2.9.4'}{'D': 26.0, 'A': None, 'B': None, 'C': 24.0}
DEBUG:Entries Structure Validator:Checking entry: ['2.6', 30.0]
DEBUG:Entries Structure Validator:Checking connected element D
DEBUG:Entries Structure Validator:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validating node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Entries Structure Validator:	Connected node still have entries
DEBUG:Entries Structure Validator:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validator:		connected_combination: {'D': '2.9.4.2', 'A': None, 'B': None, 'C': None}{'D': 26.0, 'A': None, 'B': None, 'C': None}
DEBUG:Entries Structure Validator:		validating_entry_combination: {'D': None, 'A': None, 'B': None, 'C': '2.6'}{'D': None, 'A': None, 'B': None, 'C': 30.0}
DEBUG:Entries Structure Validator:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validator:		connected_combination: {'D': '1.8.2', 'A': None, 'B': None, 'C': None}{'D': 30.0, 'A': None, 'B': None, 'C': None}
DEBUG:Entries Structure Validator:		validating_entry_combination: {'D': None, 'A': None, 'B': None, 'C': '2.6'}{'D': None, 'A': None, 'B': None, 'C': 30.0}
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validator:	Connected node still have entries
DEBUG:Entries Structure Validator:		connected_entry ['2.9.4', 24.0]
DEBUG:Entries Structure Validator:		connected_combination: {'D': '2.9.4.2', 'A': None, 'B': None, 'C': '2.9.4'}{'D': 26.0, 'A': None, 'B': None, 'C': 24.0}
DEBUG:Entries Structure Validator:		validating_entry_combination: {'D': None, 'A': '2.9', 'B': '2.9.2', 'C': None}{'D': 26.0, 'A': 10.0, 'B': 31.0, 'C': 24.0}
DEBUG:Entries Structure Validator:			MATCH
DEBUG:Entries Structure Validator:		connected_entry ['2.6', 30.0]
DEBUG:Entries Structure Validator:		connected_combination: {'D': None, 'A': None, 'B': None, 'C': '2.6'}{'D': None, 'A': None, 'B': None, 'C': 30.0}
DEBUG:Entries Structure Validator:		validating_entry_combination: {'D': None, 'A': '2.9', 'B': '2.9.2', 'C': None}{'D': 26.0, 'A': 10.0, 'B': 31.0, 'C': 24.0}
DEBUG:Entries Structure Validator:Has combination
DEBUG:Entries Structure Validator:{'D': '2.9.4.2', 'A': '2.9', 'B': '2.9.2', 'C': '2.9.4'}{'D': 26.0, 'A': 10.0, 'B': 31.0, 'C': 24.0}
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Joiner Validating:Number of remaining leaf nodes of root after validation: 1
INFO:Joiner Validating:validation time 0
INFO:Joiner Validating:Results:
INFO:Joiner Validating:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Joiner Validating:Entry: ['2.9', 10.0]
INFO:Joiner Validating:{'D': '2.9.4.2', 'A': '2.9', 'B': '2.9.2', 'C': '2.9.4'}{'D': 26.0, 'A': 10.0, 'B': 31.0, 'C': 24.0}
INFO:Main:#####################
INFO:Main:#####################
INFO:Main:#####################
INFO:Loader:Loader started
INFO:Loader:Total loading time: 0
INFO:Joiner:Started Joiner
INFO:Joiner Init:Initialize link took:  0
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	is Root
DEBUG:Main Filterer:	Limit range: {'C': [13.0, 79.0], 'A': [0.0, 100.0], 'B': [12.0, 82.0], 'D': [3.0, 54.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [13.0, 79.0], 'A': [0.0, 100.0], 'B': [12.0, 82.0], 'D': [3.0, 54.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 72.0], 'A': [6.0, 118.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 72.0], 'A': [6.0, 118.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'C': [15.0, 400.0], 'A': [6.0, 99.0], 'D': [13.0, 72.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql:
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range:
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '5.6'], [12.0, 82.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '3.7.3'], [13.0, 79.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		is Root
DEBUG:Main Filterer:		Limit range: {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [15.0, 79.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql:
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range:
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:	Init xml_link and check if connected_element_node_child can satisfy limit range and structure
DEBUG:Init Children:	Init sql_link and check if connected_element_node_child can satisfy limit range
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	Check link_sql with intersection range
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:		current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:			Has Intersection, MOVE TO NEXT CHILD
DEBUG:Init Children:		current_children: B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:		current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:			Has Intersection, MOVE VALUE BOUNDARY
DEBUG:Init Children:	Init link_sql for each child node
DEBUG:Init Children:		current link_sql[B_C]:['B_C:[[5.0, 31.0], [13.0, 72.0]]', 'B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Init Children:		Checking children B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:			Checking table: B_C
DEBUG:Init Children:				current cursor: 0
DEBUG:Init Children:				current table node: B_C:[[5.0, 31.0], [13.0, 72.0]]
DEBUG:Init Children:				Checking allowed index: 0
DEBUG:Init Children:					B: [5.0, 69.0]
DEBUG:Init Children:					C: [6.0, 72.0]
DEBUG:Init Children:				Add this node and move to next table node
DEBUG:Init Children:				current cursor: 1
DEBUG:Init Children:				current table node: B_C:[[44.0, 69.0], [6.0, 41.0]]
DEBUG:Init Children:				Ignore this node
DEBUG:Init Children:		Checking children B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:			Checking table: B_C
DEBUG:Init Children:				current cursor: 1
DEBUG:Init Children:				current table node: B_C:[[44.0, 69.0], [6.0, 41.0]]
DEBUG:Init Children:				Checking allowed index: 0
DEBUG:Init Children:					B: [5.0, 69.0]
DEBUG:Init Children:					C: [6.0, 72.0]
DEBUG:Init Children:				Add this node and move to next table node
DEBUG:Init Children:	Init Children Result
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:			link xml:
DEBUG:Init Children:			link sql:
DEBUG:Init Children:				B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:			link xml:
DEBUG:Init Children:			link sql:
DEBUG:Init Children:				B_C['B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			is Root
DEBUG:Main Filterer:			Limit range: {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '4.6.3'], [3.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				is Root
DEBUG:Main Filterer:				Limit range: {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:			Init xml_link and check if connected_element_node_child can satisfy limit range and structure
DEBUG:Init Children:			Init sql_link and check if connected_element_node_child can satisfy limit range
DEBUG:Init Children:			Init Children Result
DEBUG:Init Children:			Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:					link xml:
DEBUG:Init Children:					link sql:
DEBUG:Init Children:			Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:					link xml:
DEBUG:Init Children:					link sql:
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:		Init xml_link and check if connected_element_node_child can satisfy limit range and structure
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:				This child node does not satisfy structureD:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		Init sql_link and check if connected_element_node_child can satisfy limit range
DEBUG:Init Children:		Init Children Result
DEBUG:Init Children:		Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:				link xml:
DEBUG:Init Children:					D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:				link sql:
DEBUG:Init Children:		Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:				link xml:
DEBUG:Init Children:					D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:				link sql:
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:Init xml_link and check if connected_element_node_child can satisfy limit range and structure
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:Init sql_link and check if connected_element_node_child can satisfy limit range
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:Check link_sql with intersection range
DEBUG:Init Children:allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		Has Intersection, MOVE TO NEXT CHILD
DEBUG:Init Children:	current_children: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		Has Intersection, MOVE VALUE BOUNDARY
DEBUG:Init Children:Init link_sql for each child node
DEBUG:Init Children:	current link_sql[C_A]:['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:	current link_sql[D_A]:['D_A:[[13.0, 26.0], [10.0, 41.0]]', 'D_A:[[1.0, 50.0], [72.0, 94.0]]']
DEBUG:Init Children:	current link_sql[A_B_D]:['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]', 'A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
DEBUG:Init Children:	Checking children A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		Checking table: C_A
DEBUG:Init Children:			current cursor: 0
DEBUG:Init Children:			current table node: C_A:[[24.0, 400.0], [5.0, 40.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				C: [15.0, 400.0]
DEBUG:Init Children:				A: [10.0, 94.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:			current cursor: 1
DEBUG:Init Children:			current table node: C_A:[[15.0, 71.0], [62.0, 99.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				C: [15.0, 400.0]
DEBUG:Init Children:				A: [10.0, 94.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:		Checking table: D_A
DEBUG:Init Children:			current cursor: 0
DEBUG:Init Children:			current table node: D_A:[[13.0, 26.0], [10.0, 41.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				D: [13.0, 50.0]
DEBUG:Init Children:				A: [10.0, 94.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:			current cursor: 1
DEBUG:Init Children:			current table node: D_A:[[1.0, 50.0], [72.0, 94.0]]
DEBUG:Init Children:			Ignore this node
DEBUG:Init Children:		Checking table: A_B_D
DEBUG:Init Children:			current cursor: 0
DEBUG:Init Children:			current table node: A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				A: [10.0, 94.0]
DEBUG:Init Children:				B: [17.0, 600.0]
DEBUG:Init Children:				D: [13.0, 50.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:			current cursor: 1
DEBUG:Init Children:			current table node: A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]
DEBUG:Init Children:			Ignore this node
DEBUG:Init Children:	Checking children A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		Checking table: C_A
DEBUG:Init Children:			current cursor: 1
DEBUG:Init Children:			current table node: C_A:[[15.0, 71.0], [62.0, 99.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				C: [15.0, 400.0]
DEBUG:Init Children:				A: [10.0, 94.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:		Checking table: D_A
DEBUG:Init Children:			current cursor: 1
DEBUG:Init Children:			current table node: D_A:[[1.0, 50.0], [72.0, 94.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				D: [13.0, 50.0]
DEBUG:Init Children:				A: [10.0, 94.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:		Checking table: A_B_D
DEBUG:Init Children:			current cursor: 1
DEBUG:Init Children:			current table node: A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				A: [10.0, 94.0]
DEBUG:Init Children:				B: [17.0, 600.0]
DEBUG:Init Children:				D: [13.0, 50.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:Init Children Result
DEBUG:Init Children:Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml:
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql:
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:Child A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		link xml:
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql:
DEBUG:Init Children:			A_B_D['A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
DEBUG:Init Children:			D_A['D_A:[[1.0, 50.0], [72.0, 94.0]]']
DEBUG:Init Children:			C_A['C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [15.0, 72.0], 'A': [10.0, 64.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 27.0], 'A': [6.0, 72.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 27.0], 'A': [6.0, 72.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'A': [10.0, 40.0], 'B': [31.0, 600.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql:
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range:
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 72.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 72.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:		B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '2.9.4'], [13.0, 30.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 72.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 72.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [13.0, 26.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql:
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range:
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 72.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 72.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [13.0, 26.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'C': [24.0, 72.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [13.0, 26.0]}
DEBUG:Init Children:	Init xml_link and check if connected_element_node_child can satisfy limit range and structure
DEBUG:Init Children:	Init sql_link and check if connected_element_node_child can satisfy limit range
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:			This child node does not satisfy limit rangeB_C:[[5.0, 9.0], [13.0, 36.0]]
DEBUG:Init Children:	Check link_sql with intersection range
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:		current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:			Has Intersection, MOVE TO NEXT CHILD
DEBUG:Init Children:		current_children: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:		current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:			Has Intersection, MOVE TO NEXT CHILD
DEBUG:Init Children:	Init link_sql for each child node
DEBUG:Init Children:		current link_sql[B_C]:['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Init Children:		Checking children B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:			Checking table: B_C
DEBUG:Init Children:				current cursor: 0
DEBUG:Init Children:				current table node: B_C:[[22.0, 31.0], [24.0, 72.0]]
DEBUG:Init Children:				Ignore this node
DEBUG:Init Children:		Checking children B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:			Checking table: B_C
DEBUG:Init Children:				current cursor: 0
DEBUG:Init Children:				current table node: B_C:[[22.0, 31.0], [24.0, 72.0]]
DEBUG:Init Children:				Checking allowed index: 0
DEBUG:Init Children:					B: [5.0, 31.0]
DEBUG:Init Children:					C: [13.0, 72.0]
DEBUG:Init Children:				Add this node and move to next table node
DEBUG:Init Children:	Init Children Result
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:			link xml:
DEBUG:Init Children:			link sql:
DEBUG:Init Children:				B_C[]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:			link xml:
DEBUG:Init Children:			link sql:
DEBUG:Init Children:				B_C['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 72.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [13.0, 26.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [13.0, 26.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:			Init xml_link and check if connected_element_node_child can satisfy limit range and structure
DEBUG:Init Children:			Init sql_link and check if connected_element_node_child can satisfy limit range
DEBUG:Init Children:			Init Children Result
DEBUG:Init Children:			Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:					link xml:
DEBUG:Init Children:					link sql:
DEBUG:Init Children:			Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:					link xml:
DEBUG:Init Children:					link sql:
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:		Init xml_link and check if connected_element_node_child can satisfy limit range and structure
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:				This child node does not satisfy structureD:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		Init sql_link and check if connected_element_node_child can satisfy limit range
DEBUG:Init Children:		Init Children Result
DEBUG:Init Children:		Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:				link xml:
DEBUG:Init Children:					D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:				link sql:
DEBUG:Init Children:		Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:				link xml:
DEBUG:Init Children:					D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:				link sql:
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:Init xml_link and check if connected_element_node_child can satisfy limit range and structure
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]], [['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:		This child node does not satisfy limit_rangeB:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:		This child node does not satisfy limit_rangeC:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:Init sql_link and check if connected_element_node_child can satisfy limit range
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:		This child node does not satisfy limit rangeA_B_D:[[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	C_A:[[24.0, 400.0], [5.0, 40.0]] - Children: [[[24.0, 34.0], [5.0, 10.0]], [[300.0, 400.0], [12.0, 40.0]]]
DEBUG:Init Children:		This child node does not satisfy limit rangeC_A:[[300.0, 400.0], [12.0, 40.0]]
DEBUG:Init Children:Check link_sql with intersection range
DEBUG:Init Children:allowed_value_boundary: [[10.0, 40.0]]
DEBUG:Init Children:	current_children: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		Has Intersection, MOVE TO NEXT CHILD
DEBUG:Init Children:	current_children: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		Has Intersection, MOVE VALUE BOUNDARY
DEBUG:Init Children:Init link_sql for each child node
DEBUG:Init Children:	current link_sql[A_B_D]:['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:	current link_sql[D_A]:['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:	current link_sql[C_A]:['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:	Checking children A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		Checking table: A_B_D
DEBUG:Init Children:			current cursor: 0
DEBUG:Init Children:			current table node: A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				A: [10.0, 40.0]
DEBUG:Init Children:				B: [31.0, 600.0]
DEBUG:Init Children:				D: [13.0, 26.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:		Checking table: D_A
DEBUG:Init Children:			current cursor: 0
DEBUG:Init Children:			current table node: D_A:[[13.0, 26.0], [10.0, 41.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				D: [13.0, 26.0]
DEBUG:Init Children:				A: [10.0, 40.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:		Checking table: C_A
DEBUG:Init Children:			current cursor: 0
DEBUG:Init Children:			current table node: C_A:[[24.0, 34.0], [5.0, 10.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				C: [24.0, 400.0]
DEBUG:Init Children:				A: [10.0, 40.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:	Checking children A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		Checking table: A_B_D
DEBUG:Init Children:			current cursor: 0
DEBUG:Init Children:			current table node: A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]
DEBUG:Init Children:			Move to next node
DEBUG:Init Children:		Checking table: D_A
DEBUG:Init Children:			current cursor: 0
DEBUG:Init Children:			current table node: D_A:[[13.0, 26.0], [10.0, 41.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				D: [13.0, 26.0]
DEBUG:Init Children:				A: [10.0, 40.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:		Checking table: C_A
DEBUG:Init Children:			current cursor: 0
DEBUG:Init Children:			current table node: C_A:[[24.0, 34.0], [5.0, 10.0]]
DEBUG:Init Children:			Move to next node
DEBUG:Init Children:Init Children Result
DEBUG:Init Children:Child A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		link xml:
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql:
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:Child A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		link xml:
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql:
DEBUG:Init Children:			C_A[]
DEBUG:Init Children:			A_B_D[]
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Main Filterer:--- Begin Filtering --- A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [15.0, 72.0], 'A': [70.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [40.0, 72.0], 'A': [79.0, 118.0], 'B': [17.0, 85.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [40.0, 72.0], 'A': [79.0, 118.0], 'B': [17.0, 85.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 85.0], 'A': [79.0, 94.0], 'D': [40.0, 50.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 71.0], 'A': [79.0, 94.0], 'B': [17.0, 85.0], 'D': [40.0, 50.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql:
DEBUG:Value Filterer:	A_B_D[[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:link sql intersection range:
DEBUG:Value Filterer:	C[[15.0, 71.0]]
DEBUG:Value Filterer:	A[[79.0, 94.0]]
DEBUG:Value Filterer:	B[[17.0, 85.0]]
DEBUG:Value Filterer:	D[[40.0, 50.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [15.0, 71.0], 'A': [79.0, 94.0], 'B': [17.0, 69.0], 'D': [40.0, 50.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [15.0, 71.0], 'A': [79.0, 94.0], 'B': [17.0, 69.0], 'D': [40.0, 50.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:		B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		Limit range: {'C': [15.0, 71.0], 'A': [79.0, 94.0], 'B': [17.0, 69.0], 'D': [40.0, 50.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [15.0, 71.0], 'A': [79.0, 94.0], 'B': [36.0, 69.0], 'D': [40.0, 50.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 41.0], 'B': [44.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 41.0], 'B': [44.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql:
DEBUG:Value Filterer:		B_C[[[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Value Filterer:	link sql intersection range:
DEBUG:Value Filterer:		C[[6.0, 41.0]]
DEBUG:Value Filterer:		B[[44.0, 69.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [15.0, 41.0], 'A': [79.0, 94.0], 'B': [44.0, 69.0], 'D': [40.0, 50.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [15.0, 41.0], 'A': [79.0, 94.0], 'B': [44.0, 69.0], 'D': [40.0, 50.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	Start initialize children link B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	limit_range {'C': [15.0, 41.0], 'A': [79.0, 94.0], 'B': [44.0, 69.0], 'D': [40.0, 50.0]}
DEBUG:Init Children:	Init xml_link and check if connected_element_node_child can satisfy limit range and structure
DEBUG:Init Children:	Init sql_link and check if connected_element_node_child can satisfy limit range
DEBUG:Init Children:		B_C:[[44.0, 69.0], [6.0, 41.0]] - Children: [[[44.0, 58.0], [6.0, 41.0]], [[60.0, 69.0], [11.0, 34.0]]]
DEBUG:Init Children:	Check link_sql with intersection range
DEBUG:Init Children:	allowed_value_boundary: [[44.0, 69.0]]
DEBUG:Init Children:		current_children: B:[['5.1', '5.6'], [36.0, 49.0]]
DEBUG:Init Children:		current_allowed_value_boundary: [44.0, 69.0]
DEBUG:Init Children:			Has Intersection, MOVE TO NEXT CHILD
DEBUG:Init Children:		current_children: B:[['4.15', '5.2'], [51.0, 82.0]]
DEBUG:Init Children:		current_allowed_value_boundary: [44.0, 69.0]
DEBUG:Init Children:			Has Intersection, MOVE VALUE BOUNDARY
DEBUG:Init Children:	Init link_sql for each child node
DEBUG:Init Children:		current link_sql[B_C]:['B_C:[[44.0, 58.0], [6.0, 41.0]]', 'B_C:[[60.0, 69.0], [11.0, 34.0]]']
DEBUG:Init Children:		Checking children B:[['5.1', '5.6'], [36.0, 49.0]]
DEBUG:Init Children:			Checking table: B_C
DEBUG:Init Children:				current cursor: 0
DEBUG:Init Children:				current table node: B_C:[[44.0, 58.0], [6.0, 41.0]]
DEBUG:Init Children:				Checking allowed index: 0
DEBUG:Init Children:					B: [44.0, 69.0]
DEBUG:Init Children:					C: [6.0, 41.0]
DEBUG:Init Children:				Add this node and move to next table node
DEBUG:Init Children:				current cursor: 1
DEBUG:Init Children:				current table node: B_C:[[60.0, 69.0], [11.0, 34.0]]
DEBUG:Init Children:				Ignore this node
DEBUG:Init Children:		Checking children B:[['4.15', '5.2'], [51.0, 82.0]]
DEBUG:Init Children:			Checking table: B_C
DEBUG:Init Children:				current cursor: 1
DEBUG:Init Children:				current table node: B_C:[[60.0, 69.0], [11.0, 34.0]]
DEBUG:Init Children:				Checking allowed index: 0
DEBUG:Init Children:					B: [44.0, 69.0]
DEBUG:Init Children:					C: [6.0, 41.0]
DEBUG:Init Children:				Add this node and move to next table node
DEBUG:Init Children:	Init Children Result
DEBUG:Init Children:	Child B:[['5.1', '5.6'], [36.0, 49.0]]
DEBUG:Init Children:			link xml:
DEBUG:Init Children:			link sql:
DEBUG:Init Children:				B_C['B_C:[[44.0, 58.0], [6.0, 41.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.2'], [51.0, 82.0]]
DEBUG:Init Children:			link xml:
DEBUG:Init Children:			link sql:
DEBUG:Init Children:				B_C['B_C:[[60.0, 69.0], [11.0, 34.0]]']
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			Limit range: {'C': [15.0, 41.0], 'A': [79.0, 94.0], 'B': [44.0, 69.0], 'D': [40.0, 50.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [36.0, 41.0], 'A': [79.0, 94.0], 'B': [44.0, 69.0], 'D': [40.0, 50.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [36.0, 41.0], 'A': [79.0, 94.0], 'B': [44.0, 69.0], 'D': [40.0, 50.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [36.0, 41.0], 'A': [79.0, 94.0], 'B': [44.0, 69.0], 'D': [40.0, 50.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: []
DEBUG:Main Filterer:			C:[['3.4', '3.7.3'], [36.0, 79.0]]FILTERED by connected_element_filtering
DEBUG:Main Filterer:	A:[['3.7', '5.7.4'], [70.0, 100.0]]FILTERED by when check_lower_level
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [6.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [6.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'C': [24.0, 34.0], 'A': [6.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql:
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range:
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql:
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range:
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:			 This is a leaf node
DEBUG:Init Children:		 This is a leaf node
DEBUG:Init Children:Start initialize children link A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:limit_range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:Init xml_link and check if connected_element_node_child can satisfy limit range and structure
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [20.0, 31.0]] - Children: []
DEBUG:Init Children:	C:[['2.6', '2.9.4'], [24.0, 30.0]] - Children: []
DEBUG:Init Children:Init sql_link and check if connected_element_node_child can satisfy limit range
DEBUG:Init Children:	C_A:[[24.0, 34.0], [5.0, 10.0]] - Children: []
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:Check link_sql with intersection range
DEBUG:Init Children:allowed_value_boundary: [[10.0, 10.0]]
DEBUG:Init Children:	current_children: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		Has Intersection, MOVE TO NEXT CHILD
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:			MOVE VALUE BOUNDARY
DEBUG:Init Children:Init link_sql for each child node
DEBUG:Init Children:	current link_sql[C_A]:['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:	current link_sql[A_B_D]:['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:	current link_sql[D_A]:['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:	Checking children A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:		Checking table: C_A
DEBUG:Init Children:			current cursor: 0
DEBUG:Init Children:			current table node: C_A:[[24.0, 34.0], [5.0, 10.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				C: [24.0, 34.0]
DEBUG:Init Children:				A: [10.0, 10.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:		Checking table: A_B_D
DEBUG:Init Children:			current cursor: 0
DEBUG:Init Children:			current table node: A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				A: [10.0, 10.0]
DEBUG:Init Children:				B: [31.0, 69.0]
DEBUG:Init Children:				D: [13.0, 26.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:		Checking table: D_A
DEBUG:Init Children:			current cursor: 0
DEBUG:Init Children:			current table node: D_A:[[13.0, 26.0], [10.0, 41.0]]
DEBUG:Init Children:			Checking allowed index: 0
DEBUG:Init Children:				D: [13.0, 26.0]
DEBUG:Init Children:				A: [10.0, 10.0]
DEBUG:Init Children:			Add this node and move to next table node
DEBUG:Init Children:Init Children Result
DEBUG:Init Children:Child A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:		link xml:
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql:
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [34.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	A:[['1.1', '2.2'], [34.0, 64.0]]FILTERED by value filtering
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Main Filterer:	Parent: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [6.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [6.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [10.0, 10.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql:
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range:
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:			 This is a leaf node
DEBUG:Init Children:		 This is a leaf node
DEBUG:Init Children: This is a leaf node
INFO:Joiner Filtering:Filtering time 0
INFO:Joiner Filtering:Number of node processed:  6
INFO:Joiner Filtering:Number of node filtered:  2
INFO:Joiner Filtering:Average filtering time for one node: 0
INFO:Joiner Validating:Number of remaining leaf nodes after Filtering: 1
INFO:Joiner Validating:Number of remaining leaf nodes of root after validation: 1
INFO:Joiner Validating:validation time 0
INFO:Joiner Validating:Results:
INFO:Joiner Validating:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Joiner Validating:Entry: ['2.9', 10.0]
INFO:Joiner Validating:{'C': '2.9.4', 'A': '2.9', 'B': '2.9.2', 'D': '2.9.4.2'}{'C': 24.0, 'A': 10.0, 'B': 31.0, 'D': 26.0}
INFO:Main:#####################
INFO:Main:#####################
INFO:Main:#####################
INFO:Loader:Loader started
INFO:Loader:Total loading time: 0.004
INFO:Joiner:Started Joiner
DEBUG:Joiner Init:A
DEBUG:Joiner Init:	link_xml
DEBUG:Joiner Init:		C: ["C:[['2.3', '3.7.3'], [13.0, 79.0]]"]
DEBUG:Joiner Init:		B: ["B:[['1.4', '5.6'], [12.0, 82.0]]"]
DEBUG:Joiner Init:	link_sql
DEBUG:Joiner Init:		C_A: ['C_A:[[15.0, 400.0], [5.0, 99.0]]']
DEBUG:Joiner Init:		A_B_D: ['A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]']
DEBUG:Joiner Init:		D_A: ['D_A:[[1.0, 50.0], [10.0, 94.0]]']
DEBUG:Joiner Init:B
DEBUG:Joiner Init:	link_xml
DEBUG:Joiner Init:	link_sql
DEBUG:Joiner Init:		B_C: ['B_C:[[5.0, 69.0], [6.0, 72.0]]']
DEBUG:Joiner Init:C
DEBUG:Joiner Init:	link_xml
DEBUG:Joiner Init:		D: ["D:[['1.71', '4.6.3'], [3.0, 54.0]]"]
DEBUG:Joiner Init:	link_sql
DEBUG:Joiner Init:D
DEBUG:Joiner Init:	link_xml
DEBUG:Joiner Init:	link_sql
INFO:Joiner Init:Initialize link took:  0
DEBUG:Joiner Filtering:Node: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Joiner Filtering:	status:
DEBUG:Joiner Filtering:		Filtered: False
DEBUG:Joiner Filtering:		Reason of Filtered:
DEBUG:Joiner Filtering:	filter time:  0.001682
DEBUG:Joiner Filtering:
DEBUG:Joiner Filtering:Node: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Joiner Filtering:	status:
DEBUG:Joiner Filtering:		Filtered: False
DEBUG:Joiner Filtering:		Reason of Filtered:
DEBUG:Joiner Filtering:	filter time:  0.001533
DEBUG:Joiner Filtering:
DEBUG:Joiner Filtering:Node: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Joiner Filtering:	status:
DEBUG:Joiner Filtering:		Filtered: True
DEBUG:Joiner Filtering:		Reason of Filtered: Traversing down: None of C nodes pass full filtering
DEBUG:Joiner Filtering:	filter time:  0.001602
DEBUG:Joiner Filtering:
DEBUG:Joiner Filtering:Node: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Joiner Filtering:	status:
DEBUG:Joiner Filtering:		Filtered: False
DEBUG:Joiner Filtering:		Reason of Filtered:
DEBUG:Joiner Filtering:	filter time:  0.000977
DEBUG:Joiner Filtering:
DEBUG:Joiner Filtering:Node: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Joiner Filtering:	status:
DEBUG:Joiner Filtering:		Filtered: True
DEBUG:Joiner Filtering:		Reason of Filtered: Value Filter: A_B_D is empty
DEBUG:Joiner Filtering:	filter time:  0.000061
DEBUG:Joiner Filtering:
DEBUG:Joiner Filtering:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Joiner Filtering:	status:
DEBUG:Joiner Filtering:		Filtered: False
DEBUG:Joiner Filtering:		Reason of Filtered:
DEBUG:Joiner Filtering:	filter time:  0.000677
DEBUG:Joiner Filtering:
INFO:Joiner Filtering:Total Filtering time 0.008957
INFO:Joiner Filtering:Number of node processed:  6
INFO:Joiner Filtering:Number of node filtered:  2
INFO:Joiner Filtering:Average filtering time for one node: 0.001493
INFO:Joiner Validating:Number of remaining leaf nodes after Filtering: 1
DEBUG:Joiner Validating:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
INFO:Main:#####################
INFO:Main:#####################
INFO:Main:#####################

