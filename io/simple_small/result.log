INFO:Main:Initialize link took:  0
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	is Root
DEBUG:Main Filterer:	Limit range: {'C': [13.0, 79.0], 'D': [3.0, 54.0], 'A': [0.0, 100.0], 'B': [12.0, 82.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [13.0, 79.0], 'D': [3.0, 54.0], 'A': [0.0, 100.0], 'B': [12.0, 82.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'D': [13.0, 72.0], 'A': [6.0, 99.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '3.7.3'], [13.0, 79.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '5.6'], [12.0, 82.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			is Root
DEBUG:Main Filterer:			Limit range: {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '4.6.3'], [3.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				is Root
DEBUG:Main Filterer:				Limit range: {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		is Root
DEBUG:Main Filterer:		Limit range: {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [15.0, 72.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	allowed_value_boundary[[5.0, 69.0]]
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0]}
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	allowed_value_boundary[[10.0, 94.0]]
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [15.0, 72.0], 'D': [13.0, 50.0], 'A': [10.0, 64.0], 'B': [17.0, 69.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 400.0], 'A': [5.0, 40.0]}, {'C': [15.0, 71.0], 'A': [62.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'A': [5.0, 40.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'D': [13.0, 27.0], 'A': [6.0, 40.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 72.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 72.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '2.9.4'], [13.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 72.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	allowed_value_boundary[[5.0, 31.0]]
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0]}
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]]]
DEBUG:Init Children:VAMPIRE
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: True Init Children: No child node of Bsatisfy
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Main:Number of remaining leaf nodes of root after Filtering: 0
INFO:Main:[]
INFO:Main:Number of remaining leaf nodes of root after validation: 0
INFO:Main:All Possible results:
INFO:Main:validation time 0
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	is Root
DEBUG:Main Filterer:	Limit range: {'D': [3.0, 54.0], 'B': [12.0, 82.0], 'A': [0.0, 100.0], 'C': [13.0, 79.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'D': [3.0, 54.0], 'B': [12.0, 82.0], 'A': [0.0, 100.0], 'C': [13.0, 79.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'B': [17.0, 600.0], 'A': [6.0, 118.0], 'D': [13.0, 72.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'A': [6.0, 118.0], 'D': [13.0, 72.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 600.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0], 'C': [15.0, 79.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0], 'C': [15.0, 79.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '5.6'], [12.0, 82.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '3.7.3'], [13.0, 79.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		is Root
DEBUG:Main Filterer:		Limit range: {'B': [17.0, 82.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 79.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'B': [17.0, 82.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 79.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			is Root
DEBUG:Main Filterer:			Limit range: {'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '4.6.3'], [3.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				is Root
DEBUG:Main Filterer:				Limit range: {'A': [10.0, 94.0], 'B': [17.0, 69.0], 'C': [15.0, 72.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'A': [10.0, 94.0], 'B': [17.0, 69.0], 'C': [15.0, 72.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'A': [10.0, 94.0], 'B': [17.0, 69.0], 'C': [15.0, 72.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'A': [10.0, 94.0], 'B': [17.0, 69.0], 'C': [15.0, 72.0], 'D': [13.0, 50.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'A': [10.0, 94.0], 'B': [17.0, 69.0], 'C': [15.0, 72.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0], 'C': [15.0, 72.0]}
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]]]
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'B': [17.0, 69.0], 'A': [10.0, 64.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'B': [31.0, 600.0], 'A': [6.0, 72.0], 'D': [13.0, 27.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'A': [6.0, 72.0], 'D': [13.0, 27.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 600.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'B': [31.0, 69.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'B': [31.0, 69.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '2.9.4'], [13.0, 30.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		Limit range: {'A': [10.0, 40.0], 'B': [31.0, 69.0], 'C': [24.0, 72.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'A': [10.0, 40.0], 'B': [31.0, 31.0], 'C': [24.0, 72.0], 'D': [13.0, 26.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'A': [10.0, 40.0], 'B': [31.0, 31.0], 'C': [24.0, 72.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'A': [10.0, 40.0], 'B': [31.0, 31.0], 'C': [24.0, 72.0], 'D': [13.0, 26.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'A': [10.0, 40.0], 'B': [31.0, 31.0], 'C': [24.0, 72.0], 'D': [13.0, 26.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:	current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			Limit range: {'A': [10.0, 40.0], 'B': [31.0, 31.0], 'C': [24.0, 72.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'A': [10.0, 40.0], 'B': [31.0, 31.0], 'C': [24.0, 30.0], 'D': [13.0, 26.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'A': [10.0, 40.0], 'B': [31.0, 31.0], 'C': [24.0, 30.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'A': [10.0, 40.0], 'B': [31.0, 31.0], 'C': [24.0, 30.0], 'D': [13.0, 26.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'D': [13.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0], 'C': [24.0, 30.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0], 'C': [24.0, 30.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0], 'C': [24.0, 30.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'A': [10.0, 40.0], 'B': [31.0, 31.0], 'C': [24.0, 30.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]]]
DEBUG:Init Children:VAMPIRE
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: True Init Children: No child node of Bsatisfy
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Main:Number of remaining leaf nodes of root after Filtering: 0
INFO:Main:[]
INFO:Main:Number of remaining leaf nodes of root after validation: 0
INFO:Main:All Possible results:
INFO:Main:validation time 0
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	is Root
DEBUG:Main Filterer:	Limit range: {'A': [0.0, 100.0], 'C': [13.0, 79.0], 'B': [12.0, 82.0], 'D': [3.0, 54.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'A': [0.0, 100.0], 'C': [13.0, 79.0], 'B': [12.0, 82.0], 'D': [3.0, 54.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 99.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 99.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [6.0, 99.0], 'D': [13.0, 72.0], 'B': [17.0, 600.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 600.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '3.7.3'], [13.0, 79.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '5.6'], [12.0, 82.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			is Root
DEBUG:Main Filterer:			Limit range: {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '4.6.3'], [3.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				is Root
DEBUG:Main Filterer:				Limit range: {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		is Root
DEBUG:Main Filterer:		Limit range: {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:	Child A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A[]
DEBUG:Init Children:			A_B_D['A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
DEBUG:Init Children:			D_A['D_A:[[1.0, 50.0], [72.0, 94.0]]']
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'A': [10.0, 64.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 40.0], 'C': [24.0, 400.0]}, {'A': [62.0, 99.0], 'C': [15.0, 71.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 40.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [6.0, 40.0], 'D': [13.0, 27.0], 'B': [31.0, 600.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 40.0], 'D': [13.0, 26.0], 'B': [31.0, 600.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'A': [10.0, 40.0], 'C': [24.0, 72.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'A': [10.0, 40.0], 'C': [24.0, 72.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '2.9.4'], [13.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:		B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			Limit range: {'A': [10.0, 40.0], 'C': [24.0, 72.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		Limit range: {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:	current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]], [['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C_A:[[24.0, 400.0], [5.0, 40.0]] - Children: [[[24.0, 34.0], [5.0, 10.0]], [[300.0, 400.0], [12.0, 40.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 40.0]]
DEBUG:Init Children:	current_children: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:	Child A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A[]
DEBUG:Init Children:			A_B_D[]
DEBUG:Init Children:			D_A[]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'A': [70.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	A:[['3.7', '5.7.4'], [70.0, 100.0]]FILTERED by value filtering
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'A': [10.0, 30.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [6.0, 10.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:			limit_range {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:		Start initialize children link C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		limit_range {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:			D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]] - Children: []
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	limit_range {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:		B_C:[[22.0, 31.0], [24.0, 72.0]] - Children: []
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: []
DEBUG:Init Children:	allowed_value_boundary: [[22.0, 31.0]]
DEBUG:Init Children:	remaining children nodes: []
DEBUG:Main Filterer:	A:[['2.4', '2.9'], [0.0, 30.0]]FILTERED by when check_lower_level
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: True Traversing down: None of B nodes pass full filtering
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'A': [34.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	A:[['1.1', '2.2'], [34.0, 64.0]]FILTERED by value filtering
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Main:Number of remaining leaf nodes of root after Filtering: 0
INFO:Main:[]
INFO:Main:Number of remaining leaf nodes of root after validation: 0
INFO:Main:All Possible results:
INFO:Main:validation time 0
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	is Root
DEBUG:Main Filterer:	Limit range: {'C': [13.0, 79.0], 'A': [0.0, 100.0], 'D': [3.0, 54.0], 'B': [12.0, 82.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [13.0, 79.0], 'A': [0.0, 100.0], 'D': [3.0, 54.0], 'B': [12.0, 82.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '3.7.3'], [13.0, 79.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '5.6'], [12.0, 82.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			is Root
DEBUG:Main Filterer:			Limit range: {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '4.6.3'], [3.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				is Root
DEBUG:Main Filterer:				Limit range: {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		is Root
DEBUG:Main Filterer:		Limit range: {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [15.0, 72.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0]}
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:	Child A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			D_A['D_A:[[1.0, 50.0], [72.0, 94.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
DEBUG:Init Children:			C_A[]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [15.0, 72.0], 'A': [10.0, 64.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 72.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 72.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '2.9.4'], [13.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:		B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 72.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:	current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]], [['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	C_A:[[24.0, 400.0], [5.0, 40.0]] - Children: [[[24.0, 34.0], [5.0, 10.0]], [[300.0, 400.0], [12.0, 40.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 40.0]]
DEBUG:Init Children:	current_children: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:	Child A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			D_A[]
DEBUG:Init Children:			A_B_D[]
DEBUG:Init Children:			C_A[]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [15.0, 72.0], 'A': [70.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	A:[['3.7', '5.7.4'], [70.0, 100.0]]FILTERED by value filtering
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:Start initialize children link A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:limit_range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Init Children:	C:[['2.6', '2.9.4'], [24.0, 30.0]] - Children: []
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [20.0, 31.0]] - Children: []
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	C_A:[[24.0, 34.0], [5.0, 10.0]] - Children: []
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.5', '2.9'], [0.0, 10.0]]", "A:[['2.4', '2.6'], [16.0, 30.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 10.0]]
DEBUG:Init Children:	current_children: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		case 1.1
DEBUG:Init Children:	remaining children nodes: ["A:[['2.5', '2.9'], [0.0, 10.0]]"]
DEBUG:Init Children:	Child A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [34.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	A:[['1.1', '2.2'], [34.0, 64.0]]FILTERED by value filtering
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Main Filterer:	Parent: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Main:Number of remaining leaf nodes of root after Filtering: 1
INFO:Main:["A:[['2.5', '2.9'], [0.0, 10.0]]"]
INFO:Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:All Possible results:
INFO:Main:validation time 0
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Main:Number of remaining leaf nodes of root after Filtering: 1
INFO:Main:["A:[['2.5', '2.9'], [0.0, 10.0]]"]
INFO:Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:All Possible results:
INFO:Main:validation time 0
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	is Root
DEBUG:Main Filterer:	Limit range: {'B': [12.0, 82.0], 'D': [3.0, 54.0], 'C': [13.0, 79.0], 'A': [0.0, 100.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'B': [12.0, 82.0], 'D': [3.0, 54.0], 'C': [13.0, 79.0], 'A': [0.0, 100.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'D': [13.0, 72.0], 'C': [15.0, 400.0], 'A': [6.0, 99.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 50.0], 'B': [17.0, 600.0], 'C': [15.0, 400.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'B': [17.0, 82.0], 'D': [13.0, 50.0], 'C': [15.0, 79.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'B': [17.0, 82.0], 'D': [13.0, 50.0], 'C': [15.0, 79.0], 'A': [10.0, 94.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '5.6'], [12.0, 82.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '3.7.3'], [13.0, 79.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		is Root
DEBUG:Main Filterer:		Limit range: {'B': [17.0, 82.0], 'D': [13.0, 50.0], 'C': [15.0, 79.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'B': [17.0, 82.0], 'D': [13.0, 50.0], 'C': [15.0, 79.0], 'A': [10.0, 94.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			is Root
DEBUG:Main Filterer:			Limit range: {'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '4.6.3'], [3.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				is Root
DEBUG:Main Filterer:				Limit range: {'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:	Child A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A[]
DEBUG:Init Children:			A_B_D['A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
DEBUG:Init Children:			D_A['D_A:[[1.0, 50.0], [72.0, 94.0]]']
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 64.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 400.0], 'A': [5.0, 40.0]}, {'C': [15.0, 71.0], 'A': [62.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'A': [5.0, 40.0]}, {'C': [15.0, 71.0], 'A': [62.0, 99.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'D': [13.0, 27.0], 'C': [24.0, 400.0], 'A': [6.0, 40.0]}, {'B': [31.0, 600.0], 'D': [13.0, 27.0], 'C': [15.0, 71.0], 'A': [62.0, 72.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 600.0], 'C': [24.0, 400.0], 'A': [10.0, 40.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'B': [31.0, 69.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'B': [31.0, 69.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0], 'A': [10.0, 40.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:		B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '2.9.4'], [13.0, 30.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		Limit range: {'B': [31.0, 69.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'B': [31.0, 31.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0], 'A': [10.0, 40.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'B': [31.0, 31.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0], 'A': [10.0, 40.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'B': [31.0, 31.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0], 'A': [10.0, 40.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:	current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			Limit range: {'B': [31.0, 31.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'B': [31.0, 31.0], 'D': [13.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'D': [13.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'B': [31.0, 31.0], 'D': [13.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'B': [31.0, 31.0], 'D': [13.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0]}
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]], [['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	C_A:[[24.0, 400.0], [5.0, 40.0]] - Children: [[[24.0, 34.0], [5.0, 10.0]], [[300.0, 400.0], [12.0, 40.0]]]
DEBUG:Init Children:	C_A:[[15.0, 71.0], [62.0, 99.0]] - Children: [[[15.0, 42.0], [62.0, 78.0]], [[36.0, 71.0], [92.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 40.0]]
DEBUG:Init Children:	current_children: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]', 'A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:	Child A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A[]
DEBUG:Init Children:			A_B_D[]
DEBUG:Init Children:			D_A[]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'A': [70.0, 94.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	A:[['3.7', '5.7.4'], [70.0, 100.0]]FILTERED by value filtering
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 30.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0], 'A': [6.0, 10.0]}, {'B': [31.0, 69.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0], 'A': [6.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]], [[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 69.0], 'C': [24.0, 34.0], 'A': [10.0, 10.0]}, {'D': [13.0, 26.0], 'B': [31.0, 69.0], 'C': [24.0, 34.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]], [[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0], [13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0], [31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0], [24.0, 34.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0], [10.0, 10.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:Start initialize children link A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:limit_range {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [20.0, 31.0]] - Children: []
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C:[['2.6', '2.9.4'], [24.0, 30.0]] - Children: []
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	C_A:[[24.0, 34.0], [5.0, 10.0]] - Children: []
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.5', '2.9'], [0.0, 10.0]]", "A:[['2.4', '2.6'], [16.0, 30.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 10.0], [10.0, 10.0]]
DEBUG:Init Children:	current_children: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		case 1.1
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		case 1.1
DEBUG:Init Children:	remaining children nodes: ["A:[['2.5', '2.9'], [0.0, 10.0]]"]
DEBUG:Init Children:	Child A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]', 'A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]', 'D_A:[[13.0, 26.0], [10.0, 41.0]]']
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [34.0, 40.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	A:[['1.1', '2.2'], [34.0, 64.0]]FILTERED by value filtering
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Main Filterer:	Parent: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Limit range: {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0], 'A': [6.0, 10.0]}, {'B': [31.0, 69.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0], 'A': [6.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]], [[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]], [[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 69.0], 'C': [24.0, 34.0], 'A': [10.0, 10.0]}, {'D': [13.0, 26.0], 'B': [31.0, 69.0], 'C': [24.0, 34.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]], [[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0], [13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0], [31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0], [24.0, 34.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0], [10.0, 10.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	is Root
DEBUG:Main Filterer:	Limit range: {'B': [12.0, 82.0], 'C': [13.0, 79.0], 'A': [0.0, 100.0], 'D': [3.0, 54.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'B': [12.0, 82.0], 'C': [13.0, 79.0], 'A': [0.0, 100.0], 'D': [3.0, 54.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'C': [15.0, 400.0], 'A': [6.0, 99.0], 'D': [13.0, 72.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'C': [15.0, 400.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'B': [17.0, 82.0], 'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'B': [17.0, 82.0], 'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '3.7.3'], [13.0, 79.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '5.6'], [12.0, 82.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			is Root
DEBUG:Main Filterer:			Limit range: {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '4.6.3'], [3.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				is Root
DEBUG:Main Filterer:				Limit range: {'B': [17.0, 82.0], 'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'B': [17.0, 82.0], 'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'B': [17.0, 82.0], 'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'B': [17.0, 82.0], 'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'B': [17.0, 82.0], 'C': [15.0, 79.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		is Root
DEBUG:Main Filterer:		Limit range: {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'B': [17.0, 69.0], 'C': [15.0, 72.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:	Child A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A[]
DEBUG:Init Children:			D_A['D_A:[[1.0, 50.0], [72.0, 94.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'A': [10.0, 64.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 400.0], 'A': [5.0, 40.0]}, {'C': [15.0, 71.0], 'A': [62.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'A': [5.0, 40.0]}, {'C': [15.0, 71.0], 'A': [62.0, 99.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'C': [24.0, 400.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'A': [10.0, 40.0], 'C': [24.0, 72.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'A': [10.0, 40.0], 'C': [24.0, 72.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '2.9.4'], [13.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:		B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			Limit range: {'B': [31.0, 69.0], 'C': [24.0, 72.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'B': [31.0, 69.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'B': [31.0, 69.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'B': [31.0, 69.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'B': [31.0, 69.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		Limit range: {'B': [31.0, 69.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:	current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]], [['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C_A:[[24.0, 400.0], [5.0, 40.0]] - Children: [[[24.0, 34.0], [5.0, 10.0]], [[300.0, 400.0], [12.0, 40.0]]]
DEBUG:Init Children:	C_A:[[15.0, 71.0], [62.0, 99.0]] - Children: [[[15.0, 42.0], [62.0, 78.0]], [[36.0, 71.0], [92.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 40.0]]
DEBUG:Init Children:	current_children: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:	Child A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A[]
DEBUG:Init Children:			A_B_D[]
DEBUG:Init Children:			D_A[]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'A': [70.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	A:[['3.7', '5.7.4'], [70.0, 100.0]]FILTERED by value filtering
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 30.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'C': [24.0, 34.0], 'A': [6.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'C': [24.0, 34.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:Start initialize children link A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:limit_range {'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:	C:[['2.6', '2.9.4'], [24.0, 30.0]] - Children: []
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [20.0, 31.0]] - Children: []
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C_A:[[24.0, 34.0], [5.0, 10.0]] - Children: []
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.5', '2.9'], [0.0, 10.0]]", "A:[['2.4', '2.6'], [16.0, 30.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 10.0]]
DEBUG:Init Children:	current_children: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		case 1.1
DEBUG:Init Children:	remaining children nodes: ["A:[['2.5', '2.9'], [0.0, 10.0]]"]
DEBUG:Init Children:	Child A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [34.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	A:[['1.1', '2.2'], [34.0, 64.0]]FILTERED by value filtering
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Main Filterer:	Parent: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Limit range: {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'C': [24.0, 34.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'B': [31.0, 31.0], 'C': [24.0, 30.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	is Root
DEBUG:Main Filterer:	Limit range: {'B': [12.0, 82.0], 'A': [0.0, 100.0], 'D': [3.0, 54.0], 'C': [13.0, 79.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'B': [12.0, 82.0], 'A': [0.0, 100.0], 'D': [3.0, 54.0], 'C': [13.0, 79.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'B': [17.0, 600.0], 'A': [6.0, 118.0], 'D': [13.0, 72.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'A': [6.0, 118.0], 'D': [13.0, 72.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'B': [17.0, 82.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 79.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'B': [17.0, 82.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 79.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '5.6'], [12.0, 82.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '3.7.3'], [13.0, 79.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		is Root
DEBUG:Main Filterer:		Limit range: {'A': [10.0, 94.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0], 'C': [15.0, 79.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'A': [10.0, 94.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0], 'C': [15.0, 79.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			is Root
DEBUG:Main Filterer:			Limit range: {'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '4.6.3'], [3.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				is Root
DEBUG:Main Filterer:				Limit range: {'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:	Child A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
DEBUG:Init Children:			D_A['D_A:[[1.0, 50.0], [72.0, 94.0]]']
DEBUG:Init Children:			C_A[]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'A': [10.0, 64.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'B': [31.0, 600.0], 'A': [6.0, 72.0], 'D': [13.0, 27.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'A': [6.0, 72.0], 'D': [13.0, 27.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'A': [10.0, 40.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'A': [10.0, 40.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:		B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '2.9.4'], [13.0, 30.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		Limit range: {'B': [31.0, 69.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:	current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			Limit range: {'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 72.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [13.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]], [['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	C_A:[[24.0, 400.0], [5.0, 40.0]] - Children: [[[24.0, 34.0], [5.0, 10.0]], [[300.0, 400.0], [12.0, 40.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 40.0]]
DEBUG:Init Children:	current_children: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:	Child A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D[]
DEBUG:Init Children:			D_A[]
DEBUG:Init Children:			C_A[]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'A': [70.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	A:[['3.7', '5.7.4'], [70.0, 100.0]]FILTERED by value filtering
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'B': [31.0, 31.0], 'A': [10.0, 30.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'B': [31.0, 69.0], 'A': [6.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [6.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:Start initialize children link A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:limit_range {'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [20.0, 31.0]] - Children: []
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C:[['2.6', '2.9.4'], [24.0, 30.0]] - Children: []
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	C_A:[[24.0, 34.0], [5.0, 10.0]] - Children: []
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.5', '2.9'], [0.0, 10.0]]", "A:[['2.4', '2.6'], [16.0, 30.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 10.0]]
DEBUG:Init Children:	current_children: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		case 1.1
DEBUG:Init Children:	remaining children nodes: ["A:[['2.5', '2.9'], [0.0, 10.0]]"]
DEBUG:Init Children:	Child A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'B': [31.0, 31.0], 'A': [34.0, 40.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	A:[['1.1', '2.2'], [34.0, 64.0]]FILTERED by value filtering
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Main Filterer:	Parent: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Limit range: {'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'B': [31.0, 69.0], 'A': [6.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [6.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	is Root
DEBUG:Main Filterer:	Limit range: {'C': [13.0, 79.0], 'B': [12.0, 82.0], 'A': [0.0, 100.0], 'D': [3.0, 54.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [13.0, 79.0], 'B': [12.0, 82.0], 'A': [0.0, 100.0], 'D': [3.0, 54.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'D': [13.0, 50.0], 'B': [17.0, 600.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [15.0, 79.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '3.7.3'], [13.0, 79.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '5.6'], [12.0, 82.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			is Root
DEBUG:Main Filterer:			Limit range: {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [15.0, 79.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '4.6.3'], [3.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				is Root
DEBUG:Main Filterer:				Limit range: {'C': [15.0, 79.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [15.0, 79.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [15.0, 79.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'C': [15.0, 79.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		is Root
DEBUG:Main Filterer:		Limit range: {'C': [15.0, 79.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [15.0, 79.0], 'A': [10.0, 94.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'C': [15.0, 72.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:	Child A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A[]
DEBUG:Init Children:			D_A['D_A:[[1.0, 50.0], [72.0, 94.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [15.0, 72.0], 'A': [10.0, 64.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 400.0], 'A': [5.0, 40.0]}, {'C': [15.0, 71.0], 'A': [62.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'A': [5.0, 40.0]}, {'C': [15.0, 71.0], 'A': [62.0, 99.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'D': [13.0, 26.0], 'B': [31.0, 600.0], 'A': [10.0, 40.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 72.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 72.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '2.9.4'], [13.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:		B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 72.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'C': [24.0, 30.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:	current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'C': [24.0, 30.0], 'A': [10.0, 40.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]], [['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C_A:[[24.0, 400.0], [5.0, 40.0]] - Children: [[[24.0, 34.0], [5.0, 10.0]], [[300.0, 400.0], [12.0, 40.0]]]
DEBUG:Init Children:	C_A:[[15.0, 71.0], [62.0, 99.0]] - Children: [[[15.0, 42.0], [62.0, 78.0]], [[36.0, 71.0], [92.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 40.0]]
DEBUG:Init Children:	current_children: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:	Child A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A[]
DEBUG:Init Children:			D_A[]
DEBUG:Init Children:			A_B_D[]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'C': [15.0, 72.0], 'A': [10.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [15.0, 72.0], 'A': [70.0, 94.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	A:[['3.7', '5.7.4'], [70.0, 100.0]]FILTERED by value filtering
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 30.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:Start initialize children link A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:limit_range {'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:	C:[['2.6', '2.9.4'], [24.0, 30.0]] - Children: []
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [20.0, 31.0]] - Children: []
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C_A:[[24.0, 34.0], [5.0, 10.0]] - Children: []
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.5', '2.9'], [0.0, 10.0]]", "A:[['2.4', '2.6'], [16.0, 30.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 10.0]]
DEBUG:Init Children:	current_children: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		case 1.1
DEBUG:Init Children:	remaining children nodes: ["A:[['2.5', '2.9'], [0.0, 10.0]]"]
DEBUG:Init Children:	Child A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [34.0, 40.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	A:[['1.1', '2.2'], [34.0, 64.0]]FILTERED by value filtering
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Main Filterer:	Parent: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'A': [10.0, 10.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0], 'D': [26.0, 26.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	is Root
DEBUG:Main Filterer:	Limit range: {'C': [13.0, 79.0], 'D': [3.0, 54.0], 'B': [12.0, 82.0], 'A': [0.0, 100.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [13.0, 79.0], 'D': [3.0, 54.0], 'B': [12.0, 82.0], 'A': [0.0, 100.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 72.0], 'B': [17.0, 600.0], 'A': [6.0, 118.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 72.0], 'B': [17.0, 600.0], 'A': [6.0, 118.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 50.0], 'B': [17.0, 600.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'D': [13.0, 50.0], 'B': [17.0, 600.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '3.7.3'], [13.0, 79.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '5.6'], [12.0, 82.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			is Root
DEBUG:Main Filterer:			Limit range: {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '4.6.3'], [3.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				is Root
DEBUG:Main Filterer:				Limit range: {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		is Root
DEBUG:Main Filterer:		Limit range: {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0]}
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:	Child A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
DEBUG:Init Children:			D_A['D_A:[[1.0, 50.0], [72.0, 94.0]]']
DEBUG:Init Children:			C_A[]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 64.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 27.0], 'B': [31.0, 600.0], 'A': [6.0, 72.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 27.0], 'B': [31.0, 600.0], 'A': [6.0, 72.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 600.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'D': [13.0, 26.0], 'B': [31.0, 600.0], 'A': [10.0, 40.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 72.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 72.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '2.9.4'], [13.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:		B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 72.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:	current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]], [['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	C_A:[[24.0, 400.0], [5.0, 40.0]] - Children: [[[24.0, 34.0], [5.0, 10.0]], [[300.0, 400.0], [12.0, 40.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 40.0]]
DEBUG:Init Children:	current_children: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:	Child A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D[]
DEBUG:Init Children:			D_A[]
DEBUG:Init Children:			C_A[]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [70.0, 94.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	A:[['3.7', '5.7.4'], [70.0, 100.0]]FILTERED by value filtering
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 30.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [6.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [6.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:Start initialize children link A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Init Children:	C:[['2.6', '2.9.4'], [24.0, 30.0]] - Children: []
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [20.0, 31.0]] - Children: []
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	C_A:[[24.0, 34.0], [5.0, 10.0]] - Children: []
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.5', '2.9'], [0.0, 10.0]]", "A:[['2.4', '2.6'], [16.0, 30.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 10.0]]
DEBUG:Init Children:	current_children: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		case 1.1
DEBUG:Init Children:	remaining children nodes: ["A:[['2.5', '2.9'], [0.0, 10.0]]"]
DEBUG:Init Children:	Child A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [34.0, 40.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	A:[['1.1', '2.2'], [34.0, 64.0]]FILTERED by value filtering
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Main Filterer:	Parent: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [6.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [6.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.5', 0.0]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	is Root
DEBUG:Main Filterer:	Limit range: {'C': [13.0, 79.0], 'D': [3.0, 54.0], 'B': [12.0, 82.0], 'A': [0.0, 100.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [13.0, 79.0], 'D': [3.0, 54.0], 'B': [12.0, 82.0], 'A': [0.0, 100.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'D': [1.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'D': [13.0, 50.0], 'B': [17.0, 600.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '3.7.3'], [13.0, 79.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '5.6'], [12.0, 82.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			is Root
DEBUG:Main Filterer:			Limit range: {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '4.6.3'], [3.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				is Root
DEBUG:Main Filterer:				Limit range: {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		is Root
DEBUG:Main Filterer:		Limit range: {'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [15.0, 79.0], 'D': [13.0, 50.0], 'B': [17.0, 82.0], 'A': [10.0, 94.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0]}
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:	Child A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A[]
DEBUG:Init Children:			D_A['D_A:[[1.0, 50.0], [72.0, 94.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 64.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 400.0], 'A': [5.0, 40.0]}, {'C': [15.0, 71.0], 'A': [62.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'A': [5.0, 40.0]}, {'C': [15.0, 71.0], 'A': [62.0, 99.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'D': [13.0, 26.0], 'B': [31.0, 600.0], 'A': [10.0, 40.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 72.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 72.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.3', '2.9.4'], [13.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:		B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 72.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:	current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]], [['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C_A:[[24.0, 400.0], [5.0, 40.0]] - Children: [[[24.0, 34.0], [5.0, 10.0]], [[300.0, 400.0], [12.0, 40.0]]]
DEBUG:Init Children:	C_A:[[15.0, 71.0], [62.0, 99.0]] - Children: [[[15.0, 42.0], [62.0, 78.0]], [[36.0, 71.0], [92.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 40.0]]
DEBUG:Init Children:	current_children: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:	Child A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A[]
DEBUG:Init Children:			D_A[]
DEBUG:Init Children:			A_B_D[]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Main Filterer:	Limit range: {'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [10.0, 94.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'A': [70.0, 94.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Main Filterer:	A:[['3.7', '5.7.4'], [70.0, 100.0]]FILTERED by value filtering
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 30.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:Start initialize children link A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:limit_range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Init Children:	C:[['2.6', '2.9.4'], [24.0, 30.0]] - Children: []
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [20.0, 31.0]] - Children: []
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C_A:[[24.0, 34.0], [5.0, 10.0]] - Children: []
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.5', '2.9'], [0.0, 10.0]]", "A:[['2.4', '2.6'], [16.0, 30.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 10.0]]
DEBUG:Init Children:	current_children: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		case 1.1
DEBUG:Init Children:	remaining children nodes: ["A:[['2.5', '2.9'], [0.0, 10.0]]"]
DEBUG:Init Children:	Child A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Main Filterer:--- Begin Filtering --- A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	Parent: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 40.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [34.0, 40.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Main Filterer:	A:[['1.1', '2.2'], [34.0, 64.0]]FILTERED by value filtering
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Main Filterer:--- Begin Filtering --- A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Main Filterer:	Parent: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Main Filterer:	Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Main Filterer:Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:Begin Connected Element FilteringA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Connected Element:Connected element filtering
DEBUG:Connected Element:Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Connected Element:	Checking: C
DEBUG:Connected Element:		C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:	Remaining nodes: ["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Connected Element:	Checking: B
DEBUG:Connected Element:		B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Remaining nodes: ["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Traversing Query:Start check lower lever A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Main Filterer:		--- Begin Filtering --- C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Main Filterer:			Parent: C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Main Filterer:			Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:			Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Main Filterer:		Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:		Begin Connected Element FilteringC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Connected Element:		Connected element filtering
DEBUG:Connected Element:		Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Connected Element:			Checking: D
DEBUG:Connected Element:				D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Remaining nodes: ["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Main Filterer:			--- Begin Filtering --- D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Main Filterer:				Parent: D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Main Filterer:				Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:				Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Main Filterer:			Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:			Begin Connected Element FilteringD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Connected Element:			Connected element filtering
DEBUG:Connected Element:			Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Traversing Query:	Traverse down B
DEBUG:Main Filterer:	--- Begin Filtering --- B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Main Filterer:		Parent: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Main Filterer:		Limit range: {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:		Limit range UPDATED based on node value{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:	Limit range UPDATED based on value filtering{'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Main Filterer:	Begin Connected Element FilteringB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Connected Element:	Connected element filtering
DEBUG:Connected Element:	Limit range {'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'A': [10.0, 10.0]}
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: [<src.Entry.Entry object at 0x7f227cf43e10>, <src.Entry.Entry object at 0x7f227cf43e48>]
INFO:Main:Initialize link took:  0
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '5.6'], [12.0, 82.0]]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Traversing Query:Start check lower lever A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Traversing Query:		Start check lower lever C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Traversing Query:			Start check lower lever D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [12.0, 31.0]]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Traversing Query:Start check lower lever A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Traversing Query:Start check lower lever A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Traversing Query:	Traverse down C
DEBUG:Traversing Query:		Start check lower lever C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Traversing Query:			Traverse down D
DEBUG:Traversing Query:			Start check lower lever D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Traversing Query:	Traverse down B
DEBUG:Traversing Query:	Start check lower lever B:[['1.4', '2.9.2'], [20.0, 31.0]]
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:table_dimension: {'A_B_D': 0, 'D_A': 2, 'C_A': 2}
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:Remaining Entries: []
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: TrueEntries Value Validation: no entry satisfy
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 0
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:	entry out of range -> skip
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:	entry out of range -> skip
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:Remaining Entries: []
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: TrueEntries Value Validation: no entry satisfy
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 0
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:Remaining Entries: [<src.Entry.Entry object at 0x7f8c5c4bdfd0>]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4', 24.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.6', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: [<src.Entry.Entry object at 0x7f8c5c4c7d30>, <src.Entry.Entry object at 0x7f8c5c4c7cf8>]
DEBUG:Entries Structure Validation:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:Checking Entry: ['1.8.2', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: [<src.Entry.Entry object at 0x7f8c5c4d0128>, <src.Entry.Entry object at 0x7f8c5c4d01d0>]
DEBUG:Entries Structure Validation:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking connected element C
DEBUG:Entries Value Validator:Start entries value validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4', 24.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.6', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Structure Validation:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Value Validator:Start entries value validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:Checking Entry: ['1.8.2', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Structure Validation:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validation:Checking connected element C
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4', 24.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.6', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Structure Validation:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:Checking Entry: ['1.8.2', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Structure Validation:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:Checking entry: ['1.8.2', 30.0]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validation:Checking connected element C
DEBUG:Entries Structure Validation:	 Checking connected node: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4', 24.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.6', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Structure Validation:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:Checking Entry: ['1.8.2', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Structure Validation:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:Checking entry: ['1.8.2', 30.0]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:connected_combination: {'C': None, 'B': None, 'A': None, 'D': None}{'C': None, 'B': None, 'A': None, 'D': None}validating_entry_combination: {'C': None, 'B': None, 'A': None, 'D': None}{'C': None, 'B': None, 'A': None, 'D': None}
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:cursor: 2 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 3 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9', 10.0]
DEBUG:Entries Value Validator:	{'B': None, 'A': None, 'C': None, 'D': None}{'B': 31.0, 'A': 10.0, 'C': 24.0, 'D': 26.0}
DEBUG:Entries Value Validator:	{'B': None, 'A': None, 'C': None, 'D': None}{'B': 31.0, 'A': 10.0, 'C': 24.0, 'D': 26.0}
DEBUG:Entries Value Validator:End Value Validation: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validation:Checking connected element B
DEBUG:Entries Structure Validation:	 Checking connected node: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Start entries value validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['1.4', 20.0]", "['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['1.4', 20.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9.2', 31.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [31.0, 24.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.2', 31.0]
DEBUG:Entries Value Validator:	{'B': None, 'A': None, 'C': None, 'D': None}{'B': 31.0, 'A': None, 'C': 24.0, 'D': None}
DEBUG:Entries Value Validator:End Value Validation: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Start entries structure validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.2', 31.0]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.2', 31.0]
DEBUG:Entries Structure Validation:		connected_combination: {'B': None, 'A': None, 'C': None, 'D': None}{'B': 31.0, 'A': None, 'C': 24.0, 'D': None}
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9', 10.0]
DEBUG:Entries Value Validator:	{'A': '2.9', 'B': None, 'C': None, 'D': None}{'A': 10.0, 'B': 31.0, 'C': 24.0, 'D': 26.0}
DEBUG:Entries Value Validator:End Value Validation: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validation:Checking connected element B
DEBUG:Entries Structure Validation:	 Checking connected node: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Start entries value validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['1.4', 20.0]", "['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['1.4', 20.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9.2', 31.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [31.0, 24.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.2', 31.0]
DEBUG:Entries Value Validator:	{'A': None, 'B': '2.9.2', 'C': None, 'D': None}{'A': None, 'B': 31.0, 'C': 24.0, 'D': None}
DEBUG:Entries Value Validator:End Value Validation: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Start entries structure validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.2', 31.0]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.2', 31.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'B': '2.9.2', 'C': None, 'D': None}{'A': None, 'B': 31.0, 'C': 24.0, 'D': None}
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9', 10.0]
DEBUG:Entries Value Validator:	{'C': None, 'A': '2.9', 'D': None, 'B': None}{'C': 24.0, 'A': 10.0, 'D': 26.0, 'B': 31.0}
DEBUG:Entries Value Validator:End Value Validation: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validation:Checking connected element C
DEBUG:Entries Structure Validation:	 Checking connected node: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4', 24.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.6', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4', 24.0]
DEBUG:Entries Value Validator:	{'C': None, 'A': None, 'D': None, 'B': None}{'C': None, 'A': None, 'D': None, 'B': None}
DEBUG:Entries Value Validator:['2.6', 30.0]
DEBUG:Entries Value Validator:	{'C': None, 'A': None, 'D': None, 'B': None}{'C': None, 'A': None, 'D': None, 'B': None}
DEBUG:Entries Value Validator:End Value Validation: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:Checking Entry: ['1.8.2', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:	{'C': None, 'A': None, 'D': None, 'B': None}{'C': None, 'A': None, 'D': None, 'B': None}
DEBUG:Entries Value Validator:['1.8.2', 30.0]
DEBUG:Entries Value Validator:	{'C': None, 'A': None, 'D': None, 'B': None}{'C': None, 'A': None, 'D': None, 'B': None}
DEBUG:Entries Value Validator:End Value Validation: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:Checking entry: ['1.8.2', 30.0]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': None, 'A': None, 'D': None, 'B': None}{'C': None, 'A': None, 'D': None, 'B': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': None, 'A': None, 'D': None, 'B': None}{'C': None, 'A': None, 'D': None, 'B': None}
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9', 10.0]
DEBUG:Entries Value Validator:	{'C': None, 'B': None, 'D': None, 'A': '2.9'}{'C': 24.0, 'B': 31.0, 'D': 26.0, 'A': 10.0}
DEBUG:Entries Value Validator:End Value Validation: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validation:Checking connected element C
DEBUG:Entries Structure Validation:	 Checking connected node: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4', 24.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.6', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4', 24.0]
DEBUG:Entries Value Validator:	{'C': '2.9.4', 'B': None, 'D': None, 'A': None}{'C': 24.0, 'B': None, 'D': None, 'A': None}
DEBUG:Entries Value Validator:['2.6', 30.0]
DEBUG:Entries Value Validator:	{'C': '2.6', 'B': None, 'D': None, 'A': None}{'C': 30.0, 'B': None, 'D': None, 'A': None}
DEBUG:Entries Value Validator:End Value Validation: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:Checking Entry: ['1.8.2', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:	{'C': None, 'B': None, 'D': '2.9.4.2', 'A': None}{'C': None, 'B': None, 'D': 26.0, 'A': None}
DEBUG:Entries Value Validator:['1.8.2', 30.0]
DEBUG:Entries Value Validator:	{'C': None, 'B': None, 'D': '1.8.2', 'A': None}{'C': None, 'B': None, 'D': 30.0, 'A': None}
DEBUG:Entries Value Validator:End Value Validation: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:Checking entry: ['1.8.2', 30.0]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': None, 'B': None, 'D': '2.9.4.2', 'A': None}{'C': None, 'B': None, 'D': 26.0, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': '2.9.4', 'B': None, 'D': None, 'A': None}{'C': 24.0, 'B': None, 'D': None, 'A': None}
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': None, 'B': None, 'D': '1.8.2', 'A': None}{'C': None, 'B': None, 'D': 30.0, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': '2.9.4', 'B': None, 'D': None, 'A': None}{'C': 24.0, 'B': None, 'D': None, 'A': None}
DEBUG:Entries Structure Validation:Checking entry: ['2.6', 30.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': None, 'B': None, 'D': '2.9.4.2', 'A': None}{'C': None, 'B': None, 'D': 26.0, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': '2.6', 'B': None, 'D': None, 'A': None}{'C': 30.0, 'B': None, 'D': None, 'A': None}
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': None, 'B': None, 'D': '1.8.2', 'A': None}{'C': None, 'B': None, 'D': 30.0, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': '2.6', 'B': None, 'D': None, 'A': None}{'C': 30.0, 'B': None, 'D': None, 'A': None}
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': '2.9.4', 'B': None, 'D': None, 'A': None}{'C': 24.0, 'B': None, 'D': None, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': None, 'B': None, 'D': None, 'A': '2.9'}{'C': 24.0, 'B': 31.0, 'D': 26.0, 'A': 10.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_entry ['2.6', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': '2.6', 'B': None, 'D': None, 'A': None}{'C': 30.0, 'B': None, 'D': None, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': None, 'B': None, 'D': None, 'A': '2.9'}{'C': 24.0, 'B': 31.0, 'D': 26.0, 'A': 10.0}
DEBUG:Entries Structure Validation:Checking connected element B
DEBUG:Entries Structure Validation:	 Checking connected node: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Start entries value validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['1.4', 20.0]", "['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['1.4', 20.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9.2', 31.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [31.0, 24.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.2', 31.0]
DEBUG:Entries Value Validator:	{'C': None, 'B': '2.9.2', 'D': None, 'A': None}{'C': 24.0, 'B': 31.0, 'D': None, 'A': None}
DEBUG:Entries Value Validator:End Value Validation: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Start entries structure validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.2', 31.0]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.2', 31.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': None, 'B': '2.9.2', 'D': None, 'A': None}{'C': 24.0, 'B': 31.0, 'D': None, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': None, 'B': None, 'D': None, 'A': '2.9'}{'C': 24.0, 'B': 31.0, 'D': 26.0, 'A': 10.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'C': None, 'B': None, 'D': None, 'A': '2.9'}{'C': 24.0, 'B': 31.0, 'D': 26.0, 'A': 10.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:cursor: 2 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 3 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9', 10.0]
DEBUG:Entries Value Validator:	{'D': None, 'A': '2.9', 'C': None, 'B': None}{'D': 26.0, 'A': 10.0, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Value Validator:	{'D': None, 'A': '2.9', 'C': None, 'B': None}{'D': 26.0, 'A': 10.0, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Value Validator:End Value Validation: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validation:Checking connected element C
DEBUG:Entries Structure Validation:	 Checking connected node: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4', 24.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.6', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4', 24.0]
DEBUG:Entries Value Validator:	{'D': None, 'A': None, 'C': '2.9.4', 'B': None}{'D': None, 'A': None, 'C': 24.0, 'B': None}
DEBUG:Entries Value Validator:['2.6', 30.0]
DEBUG:Entries Value Validator:	{'D': None, 'A': None, 'C': '2.6', 'B': None}{'D': None, 'A': None, 'C': 30.0, 'B': None}
DEBUG:Entries Value Validator:End Value Validation: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:Checking Entry: ['1.8.2', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:	{'D': '2.9.4.2', 'A': None, 'C': None, 'B': None}{'D': 26.0, 'A': None, 'C': None, 'B': None}
DEBUG:Entries Value Validator:['1.8.2', 30.0]
DEBUG:Entries Value Validator:	{'D': '1.8.2', 'A': None, 'C': None, 'B': None}{'D': 30.0, 'A': None, 'C': None, 'B': None}
DEBUG:Entries Value Validator:End Value Validation: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:Checking entry: ['1.8.2', 30.0]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': '2.9.4.2', 'A': None, 'C': None, 'B': None}{'D': 26.0, 'A': None, 'C': None, 'B': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'A': None, 'C': '2.9.4', 'B': None}{'D': None, 'A': None, 'C': 24.0, 'B': None}
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': '1.8.2', 'A': None, 'C': None, 'B': None}{'D': 30.0, 'A': None, 'C': None, 'B': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'A': None, 'C': '2.9.4', 'B': None}{'D': None, 'A': None, 'C': 24.0, 'B': None}
DEBUG:Entries Structure Validation:Checking entry: ['2.6', 30.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': '2.9.4.2', 'A': None, 'C': None, 'B': None}{'D': 26.0, 'A': None, 'C': None, 'B': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'A': None, 'C': '2.6', 'B': None}{'D': None, 'A': None, 'C': 30.0, 'B': None}
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': '1.8.2', 'A': None, 'C': None, 'B': None}{'D': 30.0, 'A': None, 'C': None, 'B': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'A': None, 'C': '2.6', 'B': None}{'D': None, 'A': None, 'C': 30.0, 'B': None}
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': None, 'A': None, 'C': '2.9.4', 'B': None}{'D': None, 'A': None, 'C': 24.0, 'B': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'A': '2.9', 'C': None, 'B': None}{'D': 26.0, 'A': 10.0, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_combination: {'D': None, 'A': None, 'C': '2.9.4', 'B': None}{'D': None, 'A': None, 'C': 24.0, 'B': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'A': '2.9', 'C': None, 'B': None}{'D': 26.0, 'A': 10.0, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_entry ['2.6', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': None, 'A': None, 'C': '2.6', 'B': None}{'D': None, 'A': None, 'C': 30.0, 'B': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'A': '2.9', 'C': None, 'B': None}{'D': 26.0, 'A': 10.0, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Structure Validation:		connected_combination: {'D': None, 'A': None, 'C': '2.6', 'B': None}{'D': None, 'A': None, 'C': 30.0, 'B': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'A': '2.9', 'C': None, 'B': None}{'D': 26.0, 'A': 10.0, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Structure Validation:Checking connected element B
DEBUG:Entries Structure Validation:	 Checking connected node: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Start entries value validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['1.4', 20.0]", "['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['1.4', 20.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9.2', 31.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [31.0, 24.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.2', 31.0]
DEBUG:Entries Value Validator:	{'D': None, 'A': None, 'C': None, 'B': '2.9.2'}{'D': None, 'A': None, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Value Validator:End Value Validation: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Start entries structure validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.2', 31.0]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.2', 31.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': None, 'A': None, 'C': None, 'B': '2.9.2'}{'D': None, 'A': None, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'A': '2.9', 'C': None, 'B': None}{'D': 26.0, 'A': 10.0, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_combination: {'D': None, 'A': None, 'C': None, 'B': '2.9.2'}{'D': None, 'A': None, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'A': '2.9', 'C': None, 'B': None}{'D': 26.0, 'A': 10.0, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'D': None, 'A': '2.9', 'C': None, 'B': None}{'D': 26.0, 'A': 10.0, 'C': 24.0, 'B': 31.0}
INFO:Main:{'D': None, 'A': '2.9', 'C': None, 'B': None}{'D': 26.0, 'A': 10.0, 'C': 24.0, 'B': 31.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9', 10.0]
DEBUG:Entries Value Validator:	{'A': '2.9', 'B': None, 'C': None, 'D': None}{'A': 10.0, 'B': 31.0, 'C': 24.0, 'D': 26.0}
DEBUG:Entries Value Validator:End Value Validation: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validation:Checking connected element B
DEBUG:Entries Structure Validation:	 Checking connected node: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Start entries value validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['1.4', 20.0]", "['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['1.4', 20.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9.2', 31.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [31.0, 24.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.2', 31.0]
DEBUG:Entries Value Validator:	{'A': None, 'B': '2.9.2', 'C': None, 'D': None}{'A': None, 'B': 31.0, 'C': 24.0, 'D': None}
DEBUG:Entries Value Validator:End Value Validation: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Start entries structure validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.2', 31.0]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.2', 31.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'B': '2.9.2', 'C': None, 'D': None}{'A': None, 'B': 31.0, 'C': 24.0, 'D': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': '2.9', 'B': None, 'C': None, 'D': None}{'A': 10.0, 'B': 31.0, 'C': 24.0, 'D': 26.0}
DEBUG:Entries Structure Validation:Value Satisfy: True
DEBUG:Entries Structure Validation:Structure Satisfy: True
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:Checking connected element C
DEBUG:Entries Structure Validation:	 Checking connected node: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4', 24.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.6', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4', 24.0]
DEBUG:Entries Value Validator:	{'B': None, 'A': None, 'C': '2.9.4', 'D': None}{'B': None, 'A': None, 'C': 24.0, 'D': None}
DEBUG:Entries Value Validator:['2.6', 30.0]
DEBUG:Entries Value Validator:	{'B': None, 'A': None, 'C': '2.6', 'D': None}{'B': None, 'A': None, 'C': 30.0, 'D': None}
DEBUG:Entries Value Validator:End Value Validation: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:Checking Entry: ['1.8.2', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:	{'B': None, 'A': None, 'C': None, 'D': '2.9.4.2'}{'B': None, 'A': None, 'C': None, 'D': 26.0}
DEBUG:Entries Value Validator:['1.8.2', 30.0]
DEBUG:Entries Value Validator:	{'B': None, 'A': None, 'C': None, 'D': '1.8.2'}{'B': None, 'A': None, 'C': None, 'D': 30.0}
DEBUG:Entries Value Validator:End Value Validation: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:Checking entry: ['1.8.2', 30.0]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'B': None, 'A': None, 'C': None, 'D': '2.9.4.2'}{'B': None, 'A': None, 'C': None, 'D': 26.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'B': None, 'A': None, 'C': '2.9.4', 'D': None}{'B': None, 'A': None, 'C': 24.0, 'D': None}
DEBUG:Entries Structure Validation:Value Satisfy: True
DEBUG:Entries Structure Validation:Structure Satisfy: False
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'B': None, 'A': None, 'C': None, 'D': '1.8.2'}{'B': None, 'A': None, 'C': None, 'D': 30.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'B': None, 'A': None, 'C': '2.9.4', 'D': None}{'B': None, 'A': None, 'C': 24.0, 'D': None}
DEBUG:Entries Structure Validation:Value Satisfy: True
DEBUG:Entries Structure Validation:Structure Satisfy: False
DEBUG:Entries Structure Validation:Checking entry: ['2.6', 30.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'B': None, 'A': None, 'C': None, 'D': '2.9.4.2'}{'B': None, 'A': None, 'C': None, 'D': 26.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'B': None, 'A': None, 'C': '2.6', 'D': None}{'B': None, 'A': None, 'C': 30.0, 'D': None}
DEBUG:Entries Structure Validation:Value Satisfy: True
DEBUG:Entries Structure Validation:Structure Satisfy: False
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'B': None, 'A': None, 'C': None, 'D': '1.8.2'}{'B': None, 'A': None, 'C': None, 'D': 30.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'B': None, 'A': None, 'C': '2.6', 'D': None}{'B': None, 'A': None, 'C': 30.0, 'D': None}
DEBUG:Entries Structure Validation:Value Satisfy: True
DEBUG:Entries Structure Validation:Structure Satisfy: False
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:		connected_combination: {'B': None, 'A': None, 'C': '2.9.4', 'D': None}{'B': None, 'A': None, 'C': 24.0, 'D': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'B': None, 'A': '2.9', 'C': None, 'D': None}{'B': 31.0, 'A': 10.0, 'C': 24.0, 'D': 26.0}
DEBUG:Entries Structure Validation:Value Satisfy: True
DEBUG:Entries Structure Validation:Structure Satisfy: True
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_entry ['2.6', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'B': None, 'A': None, 'C': '2.6', 'D': None}{'B': None, 'A': None, 'C': 30.0, 'D': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'B': None, 'A': '2.9', 'C': None, 'D': None}{'B': 31.0, 'A': 10.0, 'C': 24.0, 'D': 26.0}
DEBUG:Entries Structure Validation:Value Satisfy: False
DEBUG:Entries Structure Validation:Structure Satisfy: False
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'B': None, 'C': None, 'D': None}{'A': 10.0, 'B': 31.0, 'C': 24.0, 'D': 26.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9', 10.0]
DEBUG:Entries Value Validator:	{'C': None, 'B': None, 'A': '2.9', 'D': None}{'C': 24.0, 'B': 31.0, 'A': 10.0, 'D': 26.0}
DEBUG:Entries Value Validator:End Value Validation: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validation:Checking connected element C
DEBUG:Entries Structure Validation:Relationship: 2.0
DEBUG:Entries Structure Validation:	 Checking connected node: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4', 24.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.6', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4', 24.0]
DEBUG:Entries Value Validator:	{'C': '2.9.4', 'B': None, 'A': None, 'D': None}{'C': 24.0, 'B': None, 'A': None, 'D': None}
DEBUG:Entries Value Validator:['2.6', 30.0]
DEBUG:Entries Value Validator:	{'C': '2.6', 'B': None, 'A': None, 'D': None}{'C': 30.0, 'B': None, 'A': None, 'D': None}
DEBUG:Entries Value Validator:End Value Validation: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:Relationship: 1.0
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:Checking Entry: ['1.8.2', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:	{'C': None, 'B': None, 'A': None, 'D': '2.9.4.2'}{'C': None, 'B': None, 'A': None, 'D': 26.0}
DEBUG:Entries Value Validator:['1.8.2', 30.0]
DEBUG:Entries Value Validator:	{'C': None, 'B': None, 'A': None, 'D': '1.8.2'}{'C': None, 'B': None, 'A': None, 'D': 30.0}
DEBUG:Entries Value Validator:End Value Validation: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:Checking entry: ['1.8.2', 30.0]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': None, 'B': None, 'A': None, 'D': '2.9.4.2'}{'C': None, 'B': None, 'A': None, 'D': 26.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': '2.9.4', 'B': None, 'A': None, 'D': None}{'C': 24.0, 'B': None, 'A': None, 'D': None}
DEBUG:Entries Structure Validation:Value Satisfy: True
DEBUG:Entries Structure Validation:Structure Satisfy: False
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': None, 'B': None, 'A': None, 'D': '1.8.2'}{'C': None, 'B': None, 'A': None, 'D': 30.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': '2.9.4', 'B': None, 'A': None, 'D': None}{'C': 24.0, 'B': None, 'A': None, 'D': None}
DEBUG:Entries Structure Validation:Value Satisfy: True
DEBUG:Entries Structure Validation:Structure Satisfy: False
DEBUG:Entries Structure Validation:Checking entry: ['2.6', 30.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:Relationship: 1.0
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': None, 'B': None, 'A': None, 'D': '2.9.4.2'}{'C': None, 'B': None, 'A': None, 'D': 26.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': '2.6', 'B': None, 'A': None, 'D': None}{'C': 30.0, 'B': None, 'A': None, 'D': None}
DEBUG:Entries Structure Validation:Value Satisfy: True
DEBUG:Entries Structure Validation:Structure Satisfy: False
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': None, 'B': None, 'A': None, 'D': '1.8.2'}{'C': None, 'B': None, 'A': None, 'D': 30.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': '2.6', 'B': None, 'A': None, 'D': None}{'C': 30.0, 'B': None, 'A': None, 'D': None}
DEBUG:Entries Structure Validation:Value Satisfy: True
DEBUG:Entries Structure Validation:Structure Satisfy: False
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': '2.9.4', 'B': None, 'A': None, 'D': None}{'C': 24.0, 'B': None, 'A': None, 'D': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': None, 'B': None, 'A': '2.9', 'D': None}{'C': 24.0, 'B': 31.0, 'A': 10.0, 'D': 26.0}
DEBUG:Entries Structure Validation:Value Satisfy: True
DEBUG:Entries Structure Validation:Structure Satisfy: True
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_entry ['2.6', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': '2.6', 'B': None, 'A': None, 'D': None}{'C': 30.0, 'B': None, 'A': None, 'D': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': None, 'B': None, 'A': '2.9', 'D': None}{'C': 24.0, 'B': 31.0, 'A': 10.0, 'D': 26.0}
DEBUG:Entries Structure Validation:Value Satisfy: False
DEBUG:Entries Structure Validation:Structure Satisfy: False
DEBUG:Entries Structure Validation:Checking connected element B
DEBUG:Entries Structure Validation:Relationship: 2.0
DEBUG:Entries Structure Validation:	 Checking connected node: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Start entries value validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['1.4', 20.0]", "['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['1.4', 20.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9.2', 31.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [31.0, 24.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.2', 31.0]
DEBUG:Entries Value Validator:	{'C': None, 'B': '2.9.2', 'A': None, 'D': None}{'C': 24.0, 'B': 31.0, 'A': None, 'D': None}
DEBUG:Entries Value Validator:End Value Validation: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Start entries structure validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.2', 31.0]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.2', 31.0]
DEBUG:Entries Structure Validation:		connected_combination: {'C': None, 'B': '2.9.2', 'A': None, 'D': None}{'C': 24.0, 'B': 31.0, 'A': None, 'D': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'C': None, 'B': None, 'A': '2.9', 'D': None}{'C': 24.0, 'B': 31.0, 'A': 10.0, 'D': 26.0}
DEBUG:Entries Structure Validation:Value Satisfy: True
DEBUG:Entries Structure Validation:Structure Satisfy: True
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'C': None, 'B': None, 'A': '2.9', 'D': None}{'C': 24.0, 'B': 31.0, 'A': 10.0, 'D': 26.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9', 10.0]
DEBUG:Entries Value Validator:	{'D': None, 'A': '2.9', 'B': None, 'C': None}{'D': 26.0, 'A': 10.0, 'B': 31.0, 'C': 24.0}
DEBUG:Entries Value Validator:End Value Validation: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validation:Checking connected element C
DEBUG:Entries Structure Validation:	 Checking connected node: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4', 24.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.6', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4', 24.0]
DEBUG:Entries Value Validator:	{'D': None, 'C': '2.9.4', 'B': None, 'A': None}{'D': None, 'C': 24.0, 'B': None, 'A': None}
DEBUG:Entries Value Validator:['2.6', 30.0]
DEBUG:Entries Value Validator:	{'D': None, 'C': '2.6', 'B': None, 'A': None}{'D': None, 'C': 30.0, 'B': None, 'A': None}
DEBUG:Entries Value Validator:End Value Validation: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:Checking Entry: ['1.8.2', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:	{'D': '2.9.4.2', 'C': None, 'B': None, 'A': None}{'D': 26.0, 'C': None, 'B': None, 'A': None}
DEBUG:Entries Value Validator:['1.8.2', 30.0]
DEBUG:Entries Value Validator:	{'D': '1.8.2', 'C': None, 'B': None, 'A': None}{'D': 30.0, 'C': None, 'B': None, 'A': None}
DEBUG:Entries Value Validator:End Value Validation: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:Checking entry: ['1.8.2', 30.0]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': '2.9.4.2', 'C': None, 'B': None, 'A': None}{'D': 26.0, 'C': None, 'B': None, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'C': '2.9.4', 'B': None, 'A': None}{'D': None, 'C': 24.0, 'B': None, 'A': None}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': '1.8.2', 'C': None, 'B': None, 'A': None}{'D': 30.0, 'C': None, 'B': None, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'C': '2.9.4', 'B': None, 'A': None}{'D': None, 'C': 24.0, 'B': None, 'A': None}
DEBUG:Entries Structure Validation:Checking entry: ['2.6', 30.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': '2.9.4.2', 'C': None, 'B': None, 'A': None}{'D': 26.0, 'C': None, 'B': None, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'C': '2.6', 'B': None, 'A': None}{'D': None, 'C': 30.0, 'B': None, 'A': None}
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': '1.8.2', 'C': None, 'B': None, 'A': None}{'D': 30.0, 'C': None, 'B': None, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'C': '2.6', 'B': None, 'A': None}{'D': None, 'C': 30.0, 'B': None, 'A': None}
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': None, 'A': None, 'B': None, 'C': '2.9.4'}{'D': None, 'A': None, 'B': None, 'C': 24.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'A': '2.9', 'B': None, 'C': None}{'D': 26.0, 'A': 10.0, 'B': 31.0, 'C': 24.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_entry ['2.6', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': None, 'C': '2.6', 'B': None, 'A': None}{'D': None, 'C': 30.0, 'B': None, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'A': '2.9', 'B': None, 'C': None}{'D': 26.0, 'A': 10.0, 'B': 31.0, 'C': 24.0}
DEBUG:Entries Structure Validation:Checking connected element B
DEBUG:Entries Structure Validation:	 Checking connected node: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Start entries value validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['1.4', 20.0]", "['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['1.4', 20.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9.2', 31.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [31.0, 24.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.2', 31.0]
DEBUG:Entries Value Validator:	{'D': None, 'A': None, 'B': '2.9.2', 'C': None}{'D': None, 'A': None, 'B': 31.0, 'C': 24.0}
DEBUG:Entries Value Validator:End Value Validation: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Start entries structure validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.2', 31.0]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.2', 31.0]
DEBUG:Entries Structure Validation:		connected_combination: {'D': None, 'A': None, 'B': '2.9.2', 'C': None}{'D': None, 'A': None, 'B': 31.0, 'C': 24.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'D': None, 'C': None, 'B': None, 'A': '2.9'}{'D': 26.0, 'C': 24.0, 'B': 31.0, 'A': 10.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'D': None, 'A': '2.9', 'B': None, 'C': None}{'D': 26.0, 'A': 10.0, 'B': 31.0, 'C': 24.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9', 10.0]
DEBUG:Entries Value Validator:	{'A': '2.9', 'D': None, 'C': None, 'B': None}{'A': 10.0, 'D': 26.0, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Value Validator:End Value Validation: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validation:Checking connected element C
DEBUG:Entries Structure Validation:	 Checking connected node: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4', 24.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.6', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4', 24.0]
DEBUG:Entries Value Validator:	{'B': None, 'D': None, 'C': '2.9.4', 'A': None}{'B': None, 'D': None, 'C': 24.0, 'A': None}
DEBUG:Entries Value Validator:['2.6', 30.0]
DEBUG:Entries Value Validator:	{'B': None, 'D': None, 'C': '2.6', 'A': None}{'B': None, 'D': None, 'C': 30.0, 'A': None}
DEBUG:Entries Value Validator:End Value Validation: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:Checking Entry: ['1.8.2', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:	{'B': None, 'D': '2.9.4.2', 'C': None, 'A': None}{'B': None, 'D': 26.0, 'C': None, 'A': None}
DEBUG:Entries Value Validator:['1.8.2', 30.0]
DEBUG:Entries Value Validator:	{'B': None, 'D': '1.8.2', 'C': None, 'A': None}{'B': None, 'D': 30.0, 'C': None, 'A': None}
DEBUG:Entries Value Validator:End Value Validation: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:Checking entry: ['1.8.2', 30.0]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'B': None, 'D': '2.9.4.2', 'C': None, 'A': None}{'B': None, 'D': 26.0, 'C': None, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'B': None, 'D': None, 'C': '2.9.4', 'A': None}{'B': None, 'D': None, 'C': 24.0, 'A': None}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'B': None, 'D': '1.8.2', 'C': None, 'A': None}{'B': None, 'D': 30.0, 'C': None, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'B': None, 'D': None, 'C': '2.9.4', 'A': None}{'B': None, 'D': None, 'C': 24.0, 'A': None}
DEBUG:Entries Structure Validation:Has combination
DEBUG:Entries Structure Validation:{'A': None, 'D': None, 'C': '2.9.4', 'B': None}{'A': None, 'D': None, 'C': 24.0, 'B': None}
DEBUG:Entries Structure Validation:Checking entry: ['2.6', 30.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'B': None, 'D': '2.9.4.2', 'C': None, 'A': None}{'B': None, 'D': 26.0, 'C': None, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'B': None, 'D': None, 'C': '2.6', 'A': None}{'B': None, 'D': None, 'C': 30.0, 'A': None}
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'B': None, 'D': '1.8.2', 'C': None, 'A': None}{'B': None, 'D': 30.0, 'C': None, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'B': None, 'D': None, 'C': '2.6', 'A': None}{'B': None, 'D': None, 'C': 30.0, 'A': None}
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'D': None, 'C': '2.9.4', 'B': None}{'A': None, 'D': None, 'C': 24.0, 'B': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': '2.9', 'D': None, 'C': None, 'B': None}{'A': 10.0, 'D': 26.0, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_entry ['2.6', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'B': None, 'D': None, 'C': '2.6', 'A': None}{'B': None, 'D': None, 'C': 30.0, 'A': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': '2.9', 'D': None, 'C': None, 'B': None}{'A': 10.0, 'D': 26.0, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Structure Validation:Has combination
DEBUG:Entries Structure Validation:{'B': None, 'D': None, 'C': None, 'A': '2.9'}{'B': 31.0, 'D': 26.0, 'C': 24.0, 'A': 10.0}
DEBUG:Entries Structure Validation:Checking connected element B
DEBUG:Entries Structure Validation:	 Checking connected node: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Start entries value validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['1.4', 20.0]", "['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['1.4', 20.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9.2', 31.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [31.0, 24.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.2', 31.0]
DEBUG:Entries Value Validator:	{'A': None, 'D': None, 'C': None, 'B': '2.9.2'}{'A': None, 'D': None, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Value Validator:End Value Validation: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Start entries structure validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.2', 31.0]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.2', 31.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'D': None, 'C': None, 'B': '2.9.2'}{'A': None, 'D': None, 'C': 24.0, 'B': 31.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'B': None, 'D': None, 'C': None, 'A': '2.9'}{'B': 31.0, 'D': 26.0, 'C': 24.0, 'A': 10.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:Has combination
DEBUG:Entries Structure Validation:{'A': '2.9', 'D': None, 'C': None, 'B': None}{'A': 10.0, 'D': 26.0, 'C': 24.0, 'B': 31.0}
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'D': None, 'C': None, 'B': None}{'A': 10.0, 'D': 26.0, 'C': 24.0, 'B': 31.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Start entries value validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.5', 0.0]", "['2.9', 10.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.5', 0.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9', 10.0]
DEBUG:Entries Value Validator:	Checking table: C_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [34.0, 5.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [24.0, 10.0]
DEBUG:Entries Value Validator:	Checking table: A_B_D
DEBUG:Entries Value Validator:cursor: 0 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:cursor: 2 table entry: [6.0, 69.0, 13.0]
DEBUG:Entries Value Validator:cursor: 3 table entry: [10.0, 31.0, 26.0]
DEBUG:Entries Value Validator:	Checking table: D_A
DEBUG:Entries Value Validator:cursor: 0 table entry: [26.0, 10.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [13.0, 41.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9', 10.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9', 10.0]
DEBUG:Entries Value Validator:	{'A': '2.9', 'C': None, 'B': None, 'D': None}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Value Validator:	{'A': '2.9', 'C': None, 'B': None, 'D': None}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Value Validator:End Value Validation: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validation:Checking connected element C
DEBUG:Entries Structure Validation:	 Checking connected node: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4', 24.0]
DEBUG:Entries Value Validator:Checking Entry: ['2.6', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4', 24.0]", "['2.6', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4', 24.0]
DEBUG:Entries Value Validator:	{'A': None, 'C': '2.9.4', 'B': None, 'D': None}{'A': None, 'C': 24.0, 'B': None, 'D': None}
DEBUG:Entries Value Validator:['2.6', 30.0]
DEBUG:Entries Value Validator:	{'A': None, 'C': '2.6', 'B': None, 'D': None}{'A': None, 'C': 30.0, 'B': None, 'D': None}
DEBUG:Entries Value Validator:End Value Validation: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Start entries value validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:Checking Entry: ['1.8.2', 30.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.4.2', 26.0]", "['1.8.2', 30.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.4.2', 26.0]
DEBUG:Entries Value Validator:	{'A': None, 'C': None, 'B': None, 'D': '2.9.4.2'}{'A': None, 'C': None, 'B': None, 'D': 26.0}
DEBUG:Entries Value Validator:['1.8.2', 30.0]
DEBUG:Entries Value Validator:	{'A': None, 'C': None, 'B': None, 'D': '1.8.2'}{'A': None, 'C': None, 'B': None, 'D': 30.0}
DEBUG:Entries Value Validator:End Value Validation: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:Checking entry: ['1.8.2', 30.0]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': None, 'B': None, 'D': '2.9.4.2'}{'A': None, 'C': None, 'B': None, 'D': 26.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': None, 'C': '2.9.4', 'B': None, 'D': None}{'A': None, 'C': 24.0, 'B': None, 'D': None}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': None, 'B': None, 'D': '1.8.2'}{'A': None, 'C': None, 'B': None, 'D': 30.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': None, 'C': '2.9.4', 'B': None, 'D': None}{'A': None, 'C': 24.0, 'B': None, 'D': None}
DEBUG:Entries Structure Validation:Has combination
DEBUG:Entries Structure Validation:{'A': None, 'C': '2.9.4', 'B': None, 'D': '2.9.4.2'}{'A': None, 'C': 24.0, 'B': None, 'D': 26.0}
DEBUG:Entries Structure Validation:Checking entry: ['2.6', 30.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': None, 'B': None, 'D': '2.9.4.2'}{'A': None, 'C': None, 'B': None, 'D': 26.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': None, 'C': '2.6', 'B': None, 'D': None}{'A': None, 'C': 30.0, 'B': None, 'D': None}
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': None, 'B': None, 'D': '1.8.2'}{'A': None, 'C': None, 'B': None, 'D': 30.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': None, 'C': '2.6', 'B': None, 'D': None}{'A': None, 'C': 30.0, 'B': None, 'D': None}
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': '2.9.4', 'B': None, 'D': '2.9.4.2'}{'A': None, 'C': 24.0, 'B': None, 'D': 26.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': '2.9', 'C': None, 'B': None, 'D': None}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': '2.9.4', 'B': None, 'D': '2.9.4.2'}{'A': None, 'C': 24.0, 'B': None, 'D': 26.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': '2.9', 'C': None, 'B': None, 'D': None}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_entry ['2.6', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': '2.6', 'B': None, 'D': None}{'A': None, 'C': 30.0, 'B': None, 'D': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': '2.9', 'C': None, 'B': None, 'D': None}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': '2.6', 'B': None, 'D': None}{'A': None, 'C': 30.0, 'B': None, 'D': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': '2.9', 'C': None, 'B': None, 'D': None}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Structure Validation:Has combination
DEBUG:Entries Structure Validation:{'A': '2.9', 'C': '2.9.4', 'B': None, 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Structure Validation:{'A': '2.9', 'C': '2.9.4', 'B': None, 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Structure Validation:Checking connected element B
DEBUG:Entries Structure Validation:	 Checking connected node: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Start entries value validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Value Validator:Validating Node Entries: ["['1.4', 20.0]", "['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Checking Entry: ['1.4', 20.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:		out of range
DEBUG:Entries Value Validator:	no possible combination
DEBUG:Entries Value Validator:Checking Entry: ['2.9.2', 31.0]
DEBUG:Entries Value Validator:	Checking table: B_C
DEBUG:Entries Value Validator:cursor: 0 table entry: [22.0, 72.0]
DEBUG:Entries Value Validator:cursor: 1 table entry: [31.0, 24.0]
DEBUG:Entries Value Validator:Remaining Entries: ["['2.9.2', 31.0]"]
DEBUG:Entries Value Validator:Possible combination
DEBUG:Entries Value Validator:['2.9.2', 31.0]
DEBUG:Entries Value Validator:	{'A': None, 'C': None, 'B': '2.9.2', 'D': None}{'A': None, 'C': 24.0, 'B': 31.0, 'D': None}
DEBUG:Entries Value Validator:End Value Validation: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Start entries structure validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.2', 31.0]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.2', 31.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': None, 'B': '2.9.2', 'D': None}{'A': None, 'C': 24.0, 'B': 31.0, 'D': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': '2.9', 'C': '2.9.4', 'B': None, 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': None, 'B': '2.9.2', 'D': None}{'A': None, 'C': 24.0, 'B': 31.0, 'D': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': '2.9', 'C': '2.9.4', 'B': None, 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:Has combination
DEBUG:Entries Structure Validation:{'A': '2.9', 'C': '2.9.4', 'B': '2.9.2', 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Structure Validation:{'A': '2.9', 'C': '2.9.4', 'B': '2.9.2', 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'C': '2.9.4', 'B': '2.9.2', 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
INFO:Main:{'A': '2.9', 'C': '2.9.4', 'B': '2.9.2', 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0], 'D': [13.0, 50.0]}
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:	Child A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
DEBUG:Init Children:			D_A['D_A:[[1.0, 50.0], [72.0, 94.0]]']
DEBUG:Init Children:			C_A[]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:	current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]], [['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	C_A:[[24.0, 400.0], [5.0, 40.0]] - Children: [[[24.0, 34.0], [5.0, 10.0]], [[300.0, 400.0], [12.0, 40.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 40.0]]
DEBUG:Init Children:	current_children: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:	Child A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D[]
DEBUG:Init Children:			D_A[]
DEBUG:Init Children:			C_A[]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:Start initialize children link A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0], 'D': [26.0, 26.0]}
DEBUG:Init Children:	C:[['2.6', '2.9.4'], [24.0, 30.0]] - Children: []
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [20.0, 31.0]] - Children: []
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	C_A:[[24.0, 34.0], [5.0, 10.0]] - Children: []
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.5', '2.9'], [0.0, 10.0]]", "A:[['2.4', '2.6'], [16.0, 30.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 10.0]]
DEBUG:Init Children:	current_children: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		case 1.1
DEBUG:Init Children:	remaining children nodes: ["A:[['2.5', '2.9'], [0.0, 10.0]]"]
DEBUG:Init Children:	Child A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Start entries structure validating A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9', 10.0]
DEBUG:Entries Structure Validation:Checking connected element C
DEBUG:Entries Structure Validation:	 Checking connected node: C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Start entries structure validating D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:Checking entry: ['1.8.2', 30.0]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': None, 'B': None, 'D': '2.9.4.2'}{'A': None, 'C': None, 'B': None, 'D': 26.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': None, 'C': '2.9.4', 'B': None, 'D': None}{'A': None, 'C': 24.0, 'B': None, 'D': None}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': None, 'B': None, 'D': '1.8.2'}{'A': None, 'C': None, 'B': None, 'D': 30.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': None, 'C': '2.9.4', 'B': None, 'D': None}{'A': None, 'C': 24.0, 'B': None, 'D': None}
DEBUG:Entries Structure Validation:Has combination
DEBUG:Entries Structure Validation:{'A': None, 'C': '2.9.4', 'B': None, 'D': '2.9.4.2'}{'A': None, 'C': 24.0, 'B': None, 'D': 26.0}
DEBUG:Entries Structure Validation:Checking entry: ['2.6', 30.0]
DEBUG:Entries Structure Validation:Checking connected element D
DEBUG:Entries Structure Validation:	 Checking connected node: D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4.2', 26.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': None, 'B': None, 'D': '2.9.4.2'}{'A': None, 'C': None, 'B': None, 'D': 26.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': None, 'C': '2.6', 'B': None, 'D': None}{'A': None, 'C': 30.0, 'B': None, 'D': None}
DEBUG:Entries Structure Validation:		connected_entry ['1.8.2', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': None, 'B': None, 'D': '1.8.2'}{'A': None, 'C': None, 'B': None, 'D': 30.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': None, 'C': '2.6', 'B': None, 'D': None}{'A': None, 'C': 30.0, 'B': None, 'D': None}
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.4', 24.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': '2.9.4', 'B': None, 'D': '2.9.4.2'}{'A': None, 'C': 24.0, 'B': None, 'D': 26.0}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': '2.9', 'C': None, 'B': None, 'D': None}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:		connected_entry ['2.6', 30.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': '2.6', 'B': None, 'D': None}{'A': None, 'C': 30.0, 'B': None, 'D': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': '2.9', 'C': None, 'B': None, 'D': None}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Structure Validation:Has combination
DEBUG:Entries Structure Validation:{'A': '2.9', 'C': '2.9.4', 'B': None, 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Structure Validation:Checking connected element B
DEBUG:Entries Structure Validation:	 Checking connected node: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Start entries structure validating B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:Checking entry: ['2.9.2', 31.0]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Entries Structure Validation:	Connected node still have entries
DEBUG:Entries Structure Validation:		connected_entry ['2.9.2', 31.0]
DEBUG:Entries Structure Validation:		connected_combination: {'A': None, 'C': None, 'B': '2.9.2', 'D': None}{'A': None, 'C': 24.0, 'B': 31.0, 'D': None}
DEBUG:Entries Structure Validation:		validating_entry_combination: {'A': '2.9', 'C': '2.9.4', 'B': None, 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Entries Structure Validation:			MATCH
DEBUG:Entries Structure Validation:Has combination
DEBUG:Entries Structure Validation:{'A': '2.9', 'C': '2.9.4', 'B': '2.9.2', 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'C': '2.9.4', 'B': '2.9.2', 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'C': [15.0, 72.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'C': [15.0, 72.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'C': [15.0, 72.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0], 'C': [15.0, 72.0]}
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:	Child A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
DEBUG:Init Children:			D_A['D_A:[[1.0, 50.0], [72.0, 94.0]]']
DEBUG:Init Children:			C_A[]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'A': [10.0, 40.0], 'D': [13.0, 26.0], 'B': [31.0, 31.0], 'C': [24.0, 72.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:	current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'C': [24.0, 30.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'C': [24.0, 30.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 40.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'C': [24.0, 30.0]}
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]], [['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	C_A:[[24.0, 400.0], [5.0, 40.0]] - Children: [[[24.0, 34.0], [5.0, 10.0]], [[300.0, 400.0], [12.0, 40.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 40.0]]
DEBUG:Init Children:	current_children: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:	Child A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D[]
DEBUG:Init Children:			D_A[]
DEBUG:Init Children:			C_A[]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:Start initialize children link A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 10.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0], 'C': [24.0, 30.0]}
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [20.0, 31.0]] - Children: []
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C:[['2.6', '2.9.4'], [24.0, 30.0]] - Children: []
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	C_A:[[24.0, 34.0], [5.0, 10.0]] - Children: []
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.5', '2.9'], [0.0, 10.0]]", "A:[['2.4', '2.6'], [16.0, 30.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 10.0]]
DEBUG:Init Children:	current_children: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		case 1.1
DEBUG:Init Children:	remaining children nodes: ["A:[['2.5', '2.9'], [0.0, 10.0]]"]
DEBUG:Init Children:	Child A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'D': '2.9.4.2', 'B': '2.9.2', 'C': '2.9.4'}{'A': 10.0, 'D': 26.0, 'B': 31.0, 'C': 24.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'D': [13.0, 50.0], 'A': [10.0, 94.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 79.0], 'B': [17.0, 82.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'D': [13.0, 50.0], 'A': [10.0, 94.0], 'C': [15.0, 72.0], 'B': [17.0, 69.0]}
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:	Child A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			D_A['D_A:[[1.0, 50.0], [72.0, 94.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
DEBUG:Init Children:			C_A[]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'A': [10.0, 40.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'D': [26.0, 26.0], 'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 69.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'D': [26.0, 26.0], 'A': [10.0, 40.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:	current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 40.0], 'D': [26.0, 26.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0]}
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]], [['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	C_A:[[24.0, 400.0], [5.0, 40.0]] - Children: [[[24.0, 34.0], [5.0, 10.0]], [[300.0, 400.0], [12.0, 40.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 40.0]]
DEBUG:Init Children:	current_children: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:	Child A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			D_A[]
DEBUG:Init Children:			A_B_D[]
DEBUG:Init Children:			C_A[]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:Start initialize children link A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:limit_range {'D': [26.0, 26.0], 'A': [10.0, 10.0], 'C': [24.0, 30.0], 'B': [31.0, 31.0]}
DEBUG:Init Children:	C:[['2.6', '2.9.4'], [24.0, 30.0]] - Children: []
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [20.0, 31.0]] - Children: []
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	C_A:[[24.0, 34.0], [5.0, 10.0]] - Children: []
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.5', '2.9'], [0.0, 10.0]]", "A:[['2.4', '2.6'], [16.0, 30.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 10.0]]
DEBUG:Init Children:	current_children: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		case 1.1
DEBUG:Init Children:	remaining children nodes: ["A:[['2.5', '2.9'], [0.0, 10.0]]"]
DEBUG:Init Children:	Child A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'D': '2.9.4.2', 'C': '2.9.4', 'B': '2.9.2'}{'A': 10.0, 'D': 26.0, 'C': 24.0, 'B': 31.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Init Children:	Start initialize children link B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Init Children:	limit_range {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0]}
DEBUG:Init Children:		B_C:[[5.0, 69.0], [6.0, 72.0]] - Children: [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[5.0, 31.0], [13.0, 72.0]], [[44.0, 69.0], [6.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 69.0]]
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 69.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[5.0, 31.0], [13.0, 72.0]]']
DEBUG:Init Children:	Child B:[['4.15', '5.6'], [36.0, 82.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[44.0, 69.0], [6.0, 41.0]]']
DEBUG:Init Children:			Start initialize children link D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Init Children:			limit_range {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0]}
DEBUG:Init Children:	Child D:[['4.12', '4.6.3'], [3.0, 19.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Init Children:		limit_range {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0]}
DEBUG:Init Children:			D:[['1.71', '4.6.3'], [3.0, 54.0]] - Children: [[['4.12', '4.6.3'], [3.0, 19.0]], [['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.71', '2.9.4.2'], [26.0, 54.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['3.4', '3.7.3'], [36.0, 79.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.71', '2.9.4.2'], [26.0, 54.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:Start initialize children link A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 94.0], 'C': [15.0, 72.0], 'D': [13.0, 50.0], 'B': [17.0, 69.0]}
DEBUG:Init Children:	B:[['1.4', '5.6'], [12.0, 82.0]] - Children: [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [12.0, 31.0]], [['4.15', '5.6'], [36.0, 82.0]]]
DEBUG:Init Children:	C:[['2.3', '3.7.3'], [13.0, 79.0]] - Children: [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	link_xml[C] [[['2.3', '2.9.4'], [13.0, 30.0]], [['3.4', '3.7.3'], [36.0, 79.0]]]
DEBUG:Init Children:	C_A:[[15.0, 400.0], [5.0, 99.0]] - Children: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]] - Children: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]], [[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]]
DEBUG:Init Children:	D_A:[[1.0, 50.0], [10.0, 94.0]] - Children: [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[1.0, 50.0], [72.0, 94.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 94.0]]
DEBUG:Init Children:	current_children: A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 94.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['1.1', '2.9'], [0.0, 64.0]]", "A:[['3.7', '5.7.4'], [70.0, 100.0]]"]
DEBUG:Init Children:	Child A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 400.0], [5.0, 40.0]]', 'C_A:[[15.0, 71.0], [62.0, 99.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:	Child A:[['3.7', '5.7.4'], [70.0, 100.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [12.0, 31.0]]", "B:[['4.15', '5.6'], [36.0, 82.0]]"]
DEBUG:Init Children:			C["C:[['2.3', '2.9.4'], [13.0, 30.0]]", "C:[['3.4', '3.7.3'], [36.0, 79.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A[]
DEBUG:Init Children:			A_B_D['A_B_D:[[79.0, 118.0], [17.0, 85.0], [40.0, 72.0]]']
DEBUG:Init Children:			D_A['D_A:[[1.0, 50.0], [72.0, 94.0]]']
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Init Children:	Start initialize children link B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Init Children:	limit_range {'A': [10.0, 40.0], 'C': [24.0, 72.0], 'D': [13.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Init Children:		B_C:[[5.0, 31.0], [13.0, 72.0]] - Children: [[[5.0, 9.0], [13.0, 36.0]], [[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:		link_sql[B_C] [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Init Children:	filtering_node children: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[5.0, 31.0]]
DEBUG:Init Children:	current_children: B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [5.0, 31.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["B:[['1.6', '2.5.3'], [12.0, 18.0]]", "B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:	Child B:[['1.6', '2.5.3'], [12.0, 18.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C[]
DEBUG:Init Children:	Child B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			B_C['B_C:[[22.0, 31.0], [24.0, 72.0]]']
DEBUG:Init Children:			Start initialize children link D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Init Children:			limit_range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Init Children:	Child D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child D:[['1.71', '2.16.3'], [39.0, 54.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:		Start initialize children link C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Init Children:		limit_range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Init Children:			D:[['1.71', '2.9.4.2'], [26.0, 54.0]] - Children: [[['1.8.2', '2.9.4.2'], [26.0, 30.0]], [['1.71', '2.16.3'], [39.0, 54.0]]]
DEBUG:Init Children:			link_xml[D] [[['1.8.2', '2.9.4.2'], [26.0, 30.0]]]
DEBUG:Init Children:	Child C:[['2.3', '2.7'], [13.0, 17.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:	Child C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			D["D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:Start initialize children link A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 40.0], 'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [12.0, 31.0]] - Children: [[['1.6', '2.5.3'], [12.0, 18.0]], [['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C:[['2.3', '2.9.4'], [13.0, 30.0]] - Children: [[['2.3', '2.7'], [13.0, 17.0]], [['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:VAMPIRE
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	C_A:[[24.0, 400.0], [5.0, 40.0]] - Children: [[[24.0, 34.0], [5.0, 10.0]], [[300.0, 400.0], [12.0, 40.0]]]
DEBUG:Init Children:	C_A:[[15.0, 71.0], [62.0, 99.0]] - Children: [[[15.0, 42.0], [62.0, 78.0]], [[36.0, 71.0], [92.0, 99.0]]]
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]] - Children: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[18.0, 72.0], [500.0, 600.0], [19.0, 27.0]]]
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 40.0]]
DEBUG:Init Children:	current_children: A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 40.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	remaining children nodes: ["A:[['2.4', '2.9'], [0.0, 30.0]]", "A:[['1.1', '2.2'], [34.0, 64.0]]"]
DEBUG:Init Children:	Child A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]', 'A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]']
DEBUG:Init Children:	Child A:[['1.1', '2.2'], [34.0, 64.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A[]
DEBUG:Init Children:			A_B_D[]
DEBUG:Init Children:			D_A[]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:Start initialize children link A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Init Children:limit_range {'A': [10.0, 10.0], 'C': [24.0, 30.0], 'D': [26.0, 26.0], 'B': [31.0, 31.0]}
DEBUG:Init Children:	B:[['1.4', '2.9.2'], [20.0, 31.0]] - Children: []
DEBUG:Init Children:	link_xml[B] [[['1.4', '2.9.2'], [20.0, 31.0]]]
DEBUG:Init Children:	C:[['2.6', '2.9.4'], [24.0, 30.0]] - Children: []
DEBUG:Init Children:	link_xml[C] [[['2.6', '2.9.4'], [24.0, 30.0]]]
DEBUG:Init Children:	C_A:[[24.0, 34.0], [5.0, 10.0]] - Children: []
DEBUG:Init Children:	link_sql[C_A] [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]] - Children: []
DEBUG:Init Children:	link_sql[A_B_D] [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]], [[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	D_A:[[13.0, 26.0], [10.0, 41.0]] - Children: []
DEBUG:Init Children:	link_sql[D_A] [[[13.0, 26.0], [10.0, 41.0]], [[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Init Children:	filtering_node children: ["A:[['2.5', '2.9'], [0.0, 10.0]]", "A:[['2.4', '2.6'], [16.0, 30.0]]"]
DEBUG:Init Children:	allowed_value_boundary: [[10.0, 10.0], [10.0, 10.0]]
DEBUG:Init Children:	current_children: A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		SATISFY
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		case 1.1
DEBUG:Init Children:	current_children: A:[['2.4', '2.6'], [16.0, 30.0]]
DEBUG:Init Children:	current_allowed_value_boundary: [10.0, 10.0]
DEBUG:Init Children:		case 1.1
DEBUG:Init Children:	remaining children nodes: ["A:[['2.5', '2.9'], [0.0, 10.0]]"]
DEBUG:Init Children:	Child A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Init Children:		link xml: 
DEBUG:Init Children:			B["B:[['1.4', '2.9.2'], [20.0, 31.0]]"]
DEBUG:Init Children:			C["C:[['2.6', '2.9.4'], [24.0, 30.0]]"]
DEBUG:Init Children:		link sql: 
DEBUG:Init Children:			C_A['C_A:[[24.0, 34.0], [5.0, 10.0]]']
DEBUG:Init Children:			A_B_D['A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]', 'A_B_D:[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]']
DEBUG:Init Children:			D_A['D_A:[[13.0, 26.0], [10.0, 41.0]]', 'D_A:[[13.0, 26.0], [10.0, 41.0]]']
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
DEBUG:Init Children:	 This is a leaf node 
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'C': '2.9.4', 'D': '2.9.4.2', 'B': '2.9.2'}{'A': 10.0, 'C': 24.0, 'D': 26.0, 'B': 31.0}
INFO:Main:{'A': '2.9', 'C': '2.9.4', 'D': '2.9.4.2', 'B': '2.9.2'}{'A': 10.0, 'C': 24.0, 'D': 26.0, 'B': 31.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'B': [17.0, 600.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'B': [17.0, 600.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'B': [31.0, 600.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'B': [31.0, 600.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'B': '2.9.2', 'D': '2.9.4.2', 'C': '2.9.4'}{'A': 10.0, 'B': 31.0, 'D': 26.0, 'C': 24.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 50.0], 'A': [10.0, 94.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 50.0], 'B': [17.0, 600.0], 'A': [10.0, 94.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 400.0], 'A': [5.0, 40.0]}, {'C': [15.0, 71.0], 'A': [62.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'A': [5.0, 40.0]}, {'C': [15.0, 71.0], 'A': [62.0, 99.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 40.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 600.0], 'A': [10.0, 40.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'C': '2.9.4', 'B': '2.9.2', 'A': '2.9', 'D': '2.9.4.2'}{'C': 24.0, 'B': 31.0, 'A': 10.0, 'D': 26.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 99.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 99.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'C': [15.0, 400.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'B': [17.0, 600.0], 'C': [15.0, 400.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 40.0], 'C': [24.0, 400.0]}, {'A': [62.0, 99.0], 'C': [15.0, 71.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 40.0], 'C': [24.0, 400.0]}, {'A': [62.0, 99.0], 'C': [15.0, 71.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 40.0], 'C': [24.0, 400.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 40.0], 'B': [31.0, 600.0], 'C': [24.0, 400.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'B': [31.0, 69.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'B': [31.0, 69.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'B': '2.9.2', 'C': '2.9.4', 'D': '2.9.4.2'}{'A': 10.0, 'B': 31.0, 'C': 24.0, 'D': 26.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'C': [15.0, 400.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'C': [24.0, 400.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'B': '2.9.2', 'A': '2.9', 'D': '2.9.4.2', 'C': '2.9.4'}{'B': 31.0, 'A': 10.0, 'D': 26.0, 'C': 24.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 72.0], 'A': [6.0, 118.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 72.0], 'A': [6.0, 118.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 50.0], 'A': [10.0, 94.0], 'C': [15.0, 400.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 27.0], 'A': [6.0, 72.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 27.0], 'A': [6.0, 72.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 41.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 40.0], 'C': [24.0, 400.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [6.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [6.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 10.0], 'C': [24.0, 34.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [6.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [6.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 10.0], 'C': [24.0, 34.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'D': '2.9.4.2', 'A': '2.9', 'C': '2.9.4', 'B': '2.9.2'}{'D': 26.0, 'A': 10.0, 'C': 24.0, 'B': 31.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [1.0, 50.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'B': '2.9.2', 'A': '2.9', 'D': '2.9.4.2', 'C': '2.9.4'}{'B': 31.0, 'A': 10.0, 'D': 26.0, 'C': 24.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [1.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 50.0], 'B': [17.0, 600.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'B': [17.0, 600.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 600.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'B': [31.0, 600.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 69.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'C': '2.9.4', 'B': '2.9.2', 'D': '2.9.4.2', 'A': '2.9'}{'C': 24.0, 'B': 31.0, 'D': 26.0, 'A': 10.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 99.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 99.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [1.0, 50.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [13.0, 50.0], 'C': [15.0, 400.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 40.0], 'C': [24.0, 400.0]}, {'A': [62.0, 99.0], 'C': [15.0, 71.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 40.0], 'C': [24.0, 400.0]}, {'A': [62.0, 99.0], 'C': [15.0, 71.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 40.0], 'D': [13.0, 26.0], 'C': [24.0, 400.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Value Filterer:		C[[24.0, 72.0]]
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'D': [13.0, 26.0], 'C': [24.0, 34.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'D': '2.9.4.2', 'B': '2.9.2', 'C': '2.9.4'}{'A': 10.0, 'D': 26.0, 'B': 31.0, 'C': 24.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [1.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 50.0], 'A': [10.0, 94.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 600.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 40.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 40.0], 'B': [31.0, 600.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 10.0], 'B': [31.0, 69.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 10.0], 'B': [31.0, 69.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'D': '2.9.4.2', 'A': '2.9', 'B': '2.9.2', 'C': '2.9.4'}{'D': 26.0, 'A': 10.0, 'B': 31.0, 'C': 24.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'C': [15.0, 400.0], 'D': [13.0, 72.0], 'A': [6.0, 99.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'C': [15.0, 400.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'C': [24.0, 400.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'A': [5.0, 10.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0], 'A': [6.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'B': '2.9.2', 'C': '2.9.4', 'D': '2.9.4.2', 'A': '2.9'}{'B': 31.0, 'C': 24.0, 'D': 26.0, 'A': 10.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'B': [17.0, 600.0], 'D': [13.0, 72.0], 'A': [6.0, 118.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'D': [13.0, 72.0], 'A': [6.0, 118.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'C': [15.0, 400.0], 'D': [13.0, 72.0], 'A': [6.0, 99.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'B': [17.0, 600.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'B': [31.0, 600.0], 'D': [13.0, 27.0], 'A': [6.0, 72.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'D': [13.0, 27.0], 'A': [6.0, 72.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'C': [24.0, 400.0], 'D': [13.0, 27.0], 'A': [6.0, 40.0]}, {'B': [31.0, 600.0], 'C': [15.0, 71.0], 'D': [13.0, 27.0], 'A': [62.0, 72.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'B': [31.0, 600.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'B': [31.0, 69.0], 'D': [13.0, 26.0], 'A': [6.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'D': [13.0, 26.0], 'A': [6.0, 10.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0], 'A': [6.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'B': [31.0, 69.0], 'D': [13.0, 26.0], 'A': [6.0, 10.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'D': [13.0, 26.0], 'A': [6.0, 10.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0], 'A': [6.0, 10.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'B': '2.9.2', 'C': '2.9.4', 'D': '2.9.4.2', 'A': '2.9'}{'B': 31.0, 'C': 24.0, 'D': 26.0, 'A': 10.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'A': [10.0, 94.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'A': [10.0, 94.0], 'C': [15.0, 400.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'A': [10.0, 40.0], 'C': [24.0, 400.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [22.0, 31.0], 'C': [24.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'B': '2.9.2', 'A': '2.9', 'C': '2.9.4', 'D': '2.9.4.2'}{'B': 31.0, 'A': 10.0, 'C': 24.0, 'D': 26.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [6.0, 118.0], 'D': [13.0, 72.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [6.0, 118.0], 'D': [13.0, 72.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [6.0, 99.0], 'C': [15.0, 400.0], 'B': [17.0, 600.0], 'D': [13.0, 72.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'C': [15.0, 400.0], 'B': [17.0, 600.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [6.0, 72.0], 'D': [13.0, 27.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [6.0, 72.0], 'D': [13.0, 27.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [6.0, 40.0], 'C': [24.0, 400.0], 'B': [31.0, 600.0], 'D': [13.0, 27.0]}, {'A': [62.0, 72.0], 'C': [15.0, 71.0], 'B': [31.0, 600.0], 'D': [13.0, 27.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 40.0], 'C': [24.0, 400.0], 'B': [31.0, 600.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [6.0, 10.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [6.0, 10.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [6.0, 10.0], 'C': [24.0, 34.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'C': [24.0, 34.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [6.0, 10.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [6.0, 10.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [6.0, 10.0], 'C': [24.0, 34.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'C': [24.0, 34.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'C': '2.9.4', 'B': '2.9.2', 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [1.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'D': [1.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'B': [17.0, 600.0], 'C': [15.0, 400.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 40.0], 'B': [31.0, 600.0], 'C': [24.0, 400.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'B': [31.0, 69.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 41.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 34.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'B': [31.0, 69.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'B': '2.9.2', 'C': '2.9.4', 'D': '2.9.4.2'}{'A': 10.0, 'B': 31.0, 'C': 24.0, 'D': 26.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [13.0, 50.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'C': [15.0, 400.0], 'D': [13.0, 50.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 40.0], 'C': [24.0, 400.0], 'D': [13.0, 26.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'C': '2.9.4', 'D': '2.9.4.2', 'B': '2.9.2'}{'A': 10.0, 'C': 24.0, 'D': 26.0, 'B': 31.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 72.0], 'A': [6.0, 118.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 72.0], 'A': [6.0, 118.0], 'B': [17.0, 600.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'D': [13.0, 72.0], 'A': [6.0, 99.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'A': [10.0, 94.0], 'C': [15.0, 400.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 27.0], 'A': [6.0, 72.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 27.0], 'A': [6.0, 72.0], 'B': [31.0, 600.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'D': [13.0, 26.0], 'A': [10.0, 40.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [6.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [6.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'D': [13.0, 26.0], 'A': [6.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'C': [24.0, 34.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[22.0, 31.0]]
DEBUG:Value Filterer:		C[[24.0, 72.0]]
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [13.0, 26.0], 'A': [6.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [6.0, 10.0], 'B': [31.0, 69.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'A': [10.0, 10.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 69.0], 'D': [13.0, 26.0], 'A': [10.0, 10.0], 'C': [24.0, 34.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'B': '2.9.2', 'C': '2.9.4', 'A': '2.9', 'D': '2.9.4.2'}{'B': 31.0, 'C': 24.0, 'A': 10.0, 'D': 26.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'B': [17.0, 600.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'C': [15.0, 400.0], 'B': [17.0, 600.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 64.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'B': [31.0, 600.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]], [[15.0, 71.0], [62.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 40.0], 'C': [24.0, 400.0], 'B': [31.0, 600.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [13.0, 72.0], 'B': [5.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 31.0]]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 64.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [70.0, 100.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [70.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'C': [24.0, 34.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [24.0, 72.0], 'B': [22.0, 31.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[22.0, 31.0], [24.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[24.0, 72.0]]
DEBUG:Value Filterer:		B[[22.0, 31.0]]
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 41.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 10.0], 'C': [24.0, 34.0], 'B': [31.0, 69.0], 'D': [13.0, 26.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[13.0, 26.0], [10.0, 41.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 10.0], [31.0, 69.0], [13.0, 26.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 34.0], [5.0, 10.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 10.0]]
DEBUG:Value Filterer:	C[[24.0, 34.0]]
DEBUG:Value Filterer:	B[[31.0, 69.0]]
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 10.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 10.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '2.9.4.2'], [26.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '2.9.4'], [24.0, 30.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [20.0, 31.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 10.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 10.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 10.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'C': '2.9.4', 'B': '2.9.2', 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [1.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 50.0], 'A': [10.0, 94.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 50.0], 'A': [10.0, 94.0], 'B': [17.0, 600.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '3.9.2'], [0.0, 70.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [1.0, 26.0], 'A': [10.0, 72.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 26.0], [10.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 26.0], [10.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 26.0], 'A': [10.0, 72.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 12.0]], [[15.0, 300.0], [40.0, 78.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 12.0]], [[15.0, 300.0], [40.0, 78.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 26.0], 'A': [10.0, 12.0], 'C': [24.0, 400.0]}, {'D': [1.0, 26.0], 'A': [40.0, 72.0], 'C': [15.0, 300.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 18.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 18.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 12.0], 'B': [31.0, 600.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 26.0], [10.0, 72.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 12.0]], [[15.0, 300.0], [40.0, 78.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 18.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 12.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['2.9.2', '5.6'], [31.0, 49.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [31.0, 58.0], 'C': [6.0, 41.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[31.0, 58.0], [6.0, 41.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[31.0, 58.0], [6.0, 41.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [31.0, 58.0], 'C': [6.0, 41.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[31.0, 58.0], [6.0, 41.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[31.0, 58.0]]
DEBUG:Value Filterer:		C[[6.0, 41.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 24.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '3.5.2'], [30.0, 59.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '3.9.2'], [0.0, 70.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [85.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [50.0, 50.0], 'A': [94.0, 94.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[50.0, 50.0], [94.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[50.0, 50.0], [94.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [50.0, 50.0], 'A': [94.0, 94.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[36.0, 71.0], [92.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[36.0, 71.0], [92.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [50.0, 50.0], 'A': [94.0, 94.0], 'C': [36.0, 71.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[72.0, 86.0], [17.0, 500.0], [19.0, 54.0]], [[94.0, 118.0], [18.0, 85.0], [40.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[94.0, 118.0], [18.0, 85.0], [40.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [50.0, 50.0], 'A': [94.0, 94.0], 'B': [18.0, 85.0], 'C': [36.0, 71.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[50.0, 50.0], [94.0, 94.0]]]
DEBUG:Value Filterer:	C_A[[[36.0, 71.0], [92.0, 99.0]]]
DEBUG:Value Filterer:	A_B_D[[[94.0, 118.0], [18.0, 85.0], [40.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[50.0, 50.0]]
DEBUG:Value Filterer:	A[[94.0, 94.0]]
DEBUG:Value Filterer:	C[[36.0, 71.0]]
DEBUG:Value Filterer:	B[[18.0, 85.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [85.0, 100.0]] filter time: 0 filtered: True Connected Element Filter: Chas no satisfying node
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 16.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'D': [1.0, 26.0], 'A': [10.0, 72.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 26.0], [10.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 26.0], [10.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 26.0], 'A': [10.0, 72.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 12.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 12.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 26.0], 'A': [10.0, 12.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 18.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 18.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'A': [10.0, 12.0], 'B': [31.0, 600.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 26.0], [10.0, 72.0]]]
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 12.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 18.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	A[[10.0, 12.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 24.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '3.5.2'], [30.0, 59.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 16.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 16.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 16.0]]
DEBUG:Node Validator:Start validaing node B:[['2.9.2', '5.6'], [31.0, 49.0]]
DEBUG:Node Validator:End validating nodeB:[['2.9.2', '5.6'], [31.0, 49.0]]
DEBUG:Node Validator:Start validaing node C:[['2.3', '2.9.4'], [13.0, 24.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.3', '2.9.4'], [13.0, 24.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '3.5.2'], [30.0, 59.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '3.5.2'], [30.0, 59.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 16.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 16.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 16.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'D': '2.9.4.2', 'A': '2.9', 'C': '2.9.4', 'B': '2.9.2'}{'D': 26.0, 'A': 10.0, 'C': 24.0, 'B': 31.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 99.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 99.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 50.0], 'A': [10.0, 94.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 50.0], 'B': [17.0, 600.0], 'A': [10.0, 94.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '3.9.2'], [0.0, 70.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 12.0], 'C': [24.0, 400.0]}, {'A': [40.0, 78.0], 'C': [15.0, 300.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 12.0]], [[15.0, 300.0], [40.0, 78.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 12.0]], [[15.0, 300.0], [40.0, 78.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 12.0], 'C': [24.0, 400.0]}, {'A': [40.0, 78.0], 'C': [15.0, 300.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 26.0], [10.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 26.0], [10.0, 72.0]], [[1.0, 26.0], [10.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 26.0], 'A': [10.0, 12.0], 'C': [24.0, 400.0]}, {'D': [1.0, 26.0], 'A': [40.0, 72.0], 'C': [15.0, 300.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 18.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 18.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 600.0], 'A': [10.0, 12.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 12.0]], [[15.0, 300.0], [40.0, 78.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 26.0], [10.0, 72.0]], [[1.0, 26.0], [10.0, 72.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 18.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 12.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['2.9.2', '5.6'], [31.0, 49.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [31.0, 58.0], 'C': [6.0, 41.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[31.0, 58.0], [6.0, 41.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[31.0, 58.0], [6.0, 41.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [31.0, 58.0], 'C': [6.0, 41.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[31.0, 58.0], [6.0, 41.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[31.0, 58.0]]
DEBUG:Value Filterer:		C[[6.0, 41.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 24.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '3.5.2'], [30.0, 59.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '3.9.2'], [0.0, 70.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '5.7.4'], [85.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [92.0, 99.0], 'C': [36.0, 71.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[36.0, 71.0], [92.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[36.0, 71.0], [92.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [92.0, 99.0], 'C': [36.0, 71.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[50.0, 50.0], [94.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[50.0, 50.0], [94.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [50.0, 50.0], 'A': [94.0, 94.0], 'C': [36.0, 71.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[72.0, 86.0], [17.0, 500.0], [19.0, 54.0]], [[94.0, 118.0], [18.0, 85.0], [40.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[94.0, 118.0], [18.0, 85.0], [40.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [50.0, 50.0], 'B': [18.0, 85.0], 'A': [94.0, 94.0], 'C': [36.0, 71.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[36.0, 71.0], [92.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[50.0, 50.0], [94.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[94.0, 118.0], [18.0, 85.0], [40.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[50.0, 50.0]]
DEBUG:Value Filterer:	B[[18.0, 85.0]]
DEBUG:Value Filterer:	A[[94.0, 94.0]]
DEBUG:Value Filterer:	C[[36.0, 71.0]]
INFO:Main:query root node A:[['3.7', '5.7.4'], [85.0, 100.0]] filter time: 0 filtered: True Connected Element Filter: Chas no satisfying node
DEBUG:Value Filterer:Begin Value Filtering A:[['2.5', '2.9'], [0.0, 16.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 12.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 12.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 12.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 12.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 26.0], [10.0, 72.0]], [[1.0, 26.0], [10.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 26.0], [10.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [1.0, 26.0], 'A': [10.0, 12.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 18.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 18.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'D': [13.0, 26.0], 'B': [31.0, 600.0], 'A': [10.0, 12.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 12.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 26.0], [10.0, 72.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 18.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	D[[13.0, 26.0]]
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	A[[10.0, 12.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 24.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.6', '3.5.2'], [30.0, 59.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.5', '2.9'], [0.0, 16.0]] filter time: 0 filtered: False 
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.5', '2.9'], [0.0, 16.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.5', '2.9'], [0.0, 16.0]]
DEBUG:Node Validator:Start validaing node B:[['2.9.2', '5.6'], [31.0, 49.0]]
DEBUG:Node Validator:End validating nodeB:[['2.9.2', '5.6'], [31.0, 49.0]]
DEBUG:Node Validator:Start validaing node C:[['2.3', '2.9.4'], [13.0, 24.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.3', '2.9.4'], [13.0, 24.0]]
DEBUG:Node Validator:Start validaing node C:[['2.6', '3.5.2'], [30.0, 59.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [19.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.6', '3.5.2'], [30.0, 59.0]]
DEBUG:Node Validator:End validating nodeA:[['2.5', '2.9'], [0.0, 16.0]]
DEBUG:Validator Main:	A:[['2.5', '2.9'], [0.0, 16.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.5', '2.9'], [0.0, 16.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'D': '2.9.4.2', 'B': '2.9.2', 'A': '2.9', 'C': '2.9.4'}{'D': 26.0, 'B': 31.0, 'A': 10.0, 'C': 24.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'A': [5.0, 99.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [15.0, 400.0], 'D': [1.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'C': [15.0, 400.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'C': [24.0, 400.0], 'A': [5.0, 40.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'A': [5.0, 40.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'C': [24.0, 400.0], 'D': [1.0, 50.0], 'A': [10.0, 40.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'C': [24.0, 400.0], 'D': [13.0, 27.0], 'A': [10.0, 40.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 40.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 72.0], [31.0, 600.0], [13.0, 27.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	D[[13.0, 27.0]]
DEBUG:Value Filterer:	A[[10.0, 40.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 31.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 31.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 31.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.4', '2.9'], [0.0, 30.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.2'], [34.0, 64.0]]
INFO:Main:query root node A:[['1.1', '2.2'], [34.0, 64.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['3.7', '4.9'], [70.0, 89.0]]
INFO:Main:query root node A:[['3.7', '4.9'], [70.0, 89.0]] filter time: 0 filtered: True Value Filter: C_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['3.8', '5.7.4'], [90.0, 100.0]]
INFO:Main:query root node A:[['3.8', '5.7.4'], [90.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.4', '2.9'], [0.0, 30.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '2.9.2'], [12.0, 31.0]]
DEBUG:Node Validator:Start validaing node C:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Node Validator:End validating nodeD:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Node Validator:Start validaing node D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.71', '2.9.4.2'], [26.0, 54.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.3', '2.9.4'], [13.0, 30.0]]
DEBUG:Node Validator:End validating nodeA:[['2.4', '2.9'], [0.0, 30.0]]
DEBUG:Validator Main:	A:[['2.4', '2.9'], [0.0, 30.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.4', '2.9'], [0.0, 30.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'B': '2.9.2', 'C': '2.9.4', 'D': '2.9.4.2', 'A': '2.9'}{'B': 31.0, 'C': 24.0, 'D': 26.0, 'A': 10.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 99.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 99.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'D': [13.0, 72.0], 'A': [6.0, 99.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [17.0, 600.0], 'D': [13.0, 50.0], 'A': [10.0, 94.0], 'C': [15.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 69.0], 'C': [6.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 69.0]]
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['2.2', '2.9'], [0.0, 34.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [5.0, 62.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking C_A Nodes: [[[24.0, 400.0], [5.0, 62.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[24.0, 400.0], [5.0, 62.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [5.0, 62.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 79.0], [31.0, 600.0], [13.0, 41.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 79.0], [31.0, 600.0], [13.0, 41.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'D': [13.0, 41.0], 'A': [6.0, 62.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'B': [31.0, 600.0], 'D': [13.0, 41.0], 'A': [10.0, 62.0], 'C': [24.0, 400.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	C_A[[[24.0, 400.0], [5.0, 62.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 79.0], [31.0, 600.0], [13.0, 41.0]]]
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	B[[31.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 41.0]]
DEBUG:Value Filterer:	A[[10.0, 62.0]]
DEBUG:Value Filterer:	C[[24.0, 400.0]]
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 36.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'B': [5.0, 44.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 44.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 44.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'B': [5.0, 44.0], 'C': [13.0, 72.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 44.0], [13.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		B[[5.0, 44.0]]
DEBUG:Value Filterer:		C[[13.0, 72.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.5.2'], [13.0, 36.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['2.9.4.2', '4.6.3'], [3.0, 26.0]]
DEBUG:Value Filterer:			Empty link_sql
INFO:Main:query root node A:[['2.2', '2.9'], [0.0, 34.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '3.9.2'], [40.0, 85.0]]
INFO:Main:query root node A:[['1.1', '3.9.2'], [40.0, 85.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['3.8', '5.7.4'], [87.0, 100.0]]
INFO:Main:query root node A:[['3.8', '5.7.4'], [87.0, 100.0]] filter time: 0 filtered: True Value Filter: C_A is empty
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['2.2', '2.9'], [0.0, 34.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['2.2', '2.9'], [0.0, 34.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '5.6'], [12.0, 36.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '5.6'], [12.0, 36.0]]
DEBUG:Node Validator:Start validaing node C:[['2.3', '3.5.2'], [13.0, 36.0]]
DEBUG:Node Validator:Start validaing node D:[['2.9.4.2', '4.6.3'], [3.0, 26.0]]
DEBUG:Node Validator:End validating nodeD:[['2.9.4.2', '4.6.3'], [3.0, 26.0]]
DEBUG:Node Validator:Start validaing node D:[['2.9.4.2', '4.6.3'], [3.0, 26.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['2.9.4.2', '4.6.3'], [3.0, 26.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['2.9.4.2', '4.6.3'], [3.0, 26.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['2.9.4.2', '4.6.3'], [3.0, 26.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.3', '3.5.2'], [13.0, 36.0]]
DEBUG:Node Validator:End validating nodeA:[['2.2', '2.9'], [0.0, 34.0]]
DEBUG:Validator Main:	A:[['2.2', '2.9'], [0.0, 34.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['2.2', '2.9'], [0.0, 34.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'B': '2.9.2', 'D': '2.9.4.2', 'A': '2.9', 'C': '2.9.4'}{'B': 31.0, 'D': 26.0, 'A': 10.0, 'C': 24.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '5.7.4'], [0.0, 100.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'C': [15.0, 400.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'C': [15.0, 400.0], 'B': [17.0, 600.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 99.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 118.0], [17.0, 600.0], [13.0, 72.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 94.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.7.3'], [13.0, 79.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.71', '4.6.3'], [3.0, 54.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 82.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 69.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 69.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 69.0]]
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.1', '2.9'], [0.0, 40.0]]
DEBUG:Value Filterer:Init intersected_value_boundary[{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Find intersected value boundary
DEBUG:Value Filterer:Checking D_A Nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 94.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Checking C_A Nodes: [[[15.0, 400.0], [5.0, 78.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[15.0, 400.0], [5.0, 78.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 78.0], 'C': [15.0, 400.0], 'D': [1.0, 50.0]}]
DEBUG:Value Filterer:Checking A_B_D Nodes: [[[6.0, 86.0], [17.0, 600.0], [13.0, 54.0]]]
DEBUG:Value Filterer:remaining_nodes: [[[6.0, 86.0], [17.0, 600.0], [13.0, 54.0]]]
DEBUG:Value Filterer:Updated intersected value boundary: [{'A': [10.0, 78.0], 'C': [15.0, 400.0], 'B': [17.0, 600.0], 'D': [13.0, 50.0]}]
DEBUG:Value Filterer:Value Filter result
DEBUG:Value Filterer:link sql: 
DEBUG:Value Filterer:	D_A[[[1.0, 50.0], [10.0, 94.0]]]
DEBUG:Value Filterer:	C_A[[[15.0, 400.0], [5.0, 78.0]]]
DEBUG:Value Filterer:	A_B_D[[[6.0, 86.0], [17.0, 600.0], [13.0, 54.0]]]
DEBUG:Value Filterer:link sql intersection range: 
DEBUG:Value Filterer:	A[[10.0, 78.0]]
DEBUG:Value Filterer:	C[[15.0, 400.0]]
DEBUG:Value Filterer:	B[[17.0, 600.0]]
DEBUG:Value Filterer:	D[[13.0, 50.0]]
DEBUG:Value Filterer:		Begin Value Filtering C:[['2.3', '3.5.2'], [13.0, 59.0]]
DEBUG:Value Filterer:		Empty link_sql
DEBUG:Value Filterer:			Begin Value Filtering D:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Value Filterer:			Empty link_sql
DEBUG:Value Filterer:	Begin Value Filtering B:[['1.4', '5.6'], [12.0, 49.0]]
DEBUG:Value Filterer:	Init intersected_value_boundary[{'C': [6.0, 72.0], 'B': [5.0, 58.0]}]
DEBUG:Value Filterer:	Find intersected value boundary
DEBUG:Value Filterer:	Checking B_C Nodes: [[[5.0, 58.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	remaining_nodes: [[[5.0, 58.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	Updated intersected value boundary: [{'C': [6.0, 72.0], 'B': [5.0, 58.0]}]
DEBUG:Value Filterer:	Value Filter result
DEBUG:Value Filterer:	link sql: 
DEBUG:Value Filterer:		B_C[[[5.0, 58.0], [6.0, 72.0]]]
DEBUG:Value Filterer:	link sql intersection range: 
DEBUG:Value Filterer:		C[[6.0, 72.0]]
DEBUG:Value Filterer:		B[[5.0, 58.0]]
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 40.0]] filter time: 0 filtered: False 
DEBUG:Value Filterer:Begin Value Filtering A:[['1.7', '4.9'], [45.0, 89.0]]
INFO:Main:query root node A:[['1.7', '4.9'], [45.0, 89.0]] filter time: 0 filtered: True Value Filter: D_A is empty
DEBUG:Value Filterer:Begin Value Filtering A:[['3.8', '5.7.4'], [90.0, 100.0]]
INFO:Main:query root node A:[['3.8', '5.7.4'], [90.0, 100.0]] filter time: 0 filtered: True Value Filter: D_A is empty
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['1.1', '2.9'], [0.0, 40.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['1.1', '2.9'], [0.0, 40.0]]
DEBUG:Node Validator:Start validaing node C:[['2.3', '3.5.2'], [13.0, 59.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.3', '3.5.2'], [13.0, 59.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '5.6'], [12.0, 49.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '5.6'], [12.0, 49.0]]
DEBUG:Node Validator:End validating nodeA:[['1.1', '2.9'], [0.0, 40.0]]
DEBUG:Validator Main:	A:[['1.1', '2.9'], [0.0, 40.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['1.1', '2.9'], [0.0, 40.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'C': '2.9.4', 'B': '2.9.2', 'D': '2.9.4.2'}{'A': 10.0, 'C': 24.0, 'B': 31.0, 'D': 26.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Main:Initialize link took:  0
INFO:Main:query root node A:[['1.1', '5.7.4'], [0.0, 100.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.1', '2.9'], [0.0, 40.0]] filter time: 0 filtered: False 
INFO:Main:query root node A:[['1.7', '4.9'], [45.0, 89.0]] filter time: 0 filtered: True Value Filter: A_B_D is empty
INFO:Main:query root node A:[['3.8', '5.7.4'], [90.0, 100.0]] filter time: 0 filtered: True Value Filter: D_A is empty
INFO:Main:Filtering time 0
INFO:Main:Average filtering time for one node: 0
INFO:Validator Main:Number of remaining leaf nodes after Filtering: 1
DEBUG:Validator Main:Remaining leaf nodes: [[['1.1', '2.9'], [0.0, 40.0]]]
DEBUG:Validator Main:Start Validating all leaf nodes
DEBUG:Node Validator:Start validaing node A:[['1.1', '2.9'], [0.0, 40.0]]
DEBUG:Node Validator:Start validaing node C:[['2.3', '3.5.2'], [13.0, 59.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:End validating nodeD:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:Start validaing node D:[['1.8.2', '4.6.3'], [3.0, 30.0]]
DEBUG:Node Validator:Node already validated
DEBUG:Node Validator:End validating nodeC:[['2.3', '3.5.2'], [13.0, 59.0]]
DEBUG:Node Validator:Start validaing node B:[['1.4', '5.6'], [12.0, 49.0]]
DEBUG:Node Validator:End validating nodeB:[['1.4', '5.6'], [12.0, 49.0]]
DEBUG:Node Validator:End validating nodeA:[['1.1', '2.9'], [0.0, 40.0]]
DEBUG:Validator Main:	A:[['1.1', '2.9'], [0.0, 40.0]] Filtered: False
INFO:Validator Main:Number of remaining leaf nodes of root after validation: 1
INFO:Main:validation time 0
INFO:Main:Results: 
INFO:Main:Node: A:[['1.1', '2.9'], [0.0, 40.0]]
INFO:Main:Entry: ['2.9', 10.0]
INFO:Main:{'A': '2.9', 'C': '2.9.4', 'D': '2.9.4.2', 'B': '2.9.2'}{'A': 10.0, 'C': 24.0, 'D': 26.0, 'B': 31.0}
INFO:Runner:#####################
INFO:Runner:#####################
INFO:Runner:#####################
